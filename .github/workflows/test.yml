name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: zkp_test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: zkp_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup database
      run: |
        # Create PostgreSQL extensions and schema
        PGPASSWORD=test_password psql -h localhost -U zkp_test_user -d zkp_test -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"
        PGPASSWORD=test_password psql -h localhost -U zkp_test_user -d zkp_test -c "CREATE EXTENSION IF NOT EXISTS \"pgcrypto\";"
    
    - name: Generate Prisma client
      run: |
        cd packages/db
        npx prisma generate
        
    - name: Run migrations
      run: |
        cd packages/db
        DATABASE_URL=postgresql://zkp_test_user:test_password@localhost:5432/zkp_test npx prisma migrate deploy
    
    - name: Run tests
      env:
        DATABASE_URL_TEST: postgresql://zkp_test_user:test_password@localhost:5432/zkp_test
        REDIS_URL_TEST: redis://localhost:6379
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
      run: npm test