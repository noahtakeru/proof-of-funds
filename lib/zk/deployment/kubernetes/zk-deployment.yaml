apiVersion: apps/v1
kind: Deployment
metadata:
  name: zk-api
  labels:
    app: zk-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: zk-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: zk-api
    spec:
      containers:
      - name: zk-api
        image: ${REGISTRY}/zk-api:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: redis-url
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: api-secret
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zk-worker
  labels:
    app: zk-worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: zk-worker
  template:
    metadata:
      labels:
        app: zk-worker
    spec:
      containers:
      - name: zk-worker
        image: ${REGISTRY}/zk-worker:${TAG}
        imagePullPolicy: Always
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: redis-url
        - name: WORKER_CONCURRENCY
          value: "2"
        - name: MAX_MEMORY_USAGE
          value: "3072"
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep zk-worker | grep -v grep
          initialDelaySeconds: 30
          periodSeconds: 60
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-dashboard
  labels:
    app: admin-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-dashboard
  template:
    metadata:
      labels:
        app: admin-dashboard
    spec:
      containers:
      - name: admin-dashboard
        image: ${REGISTRY}/admin-dashboard:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_URL
          value: "http://zk-api-service:3000"
        - name: ADMIN_SECRET
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: admin-secret
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 10
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: mongodb-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: mongodb-password
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6-alpine
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "512Mi"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring
  labels:
    app: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
  template:
    metadata:
      labels:
        app: monitoring
    spec:
      containers:
      - name: monitoring
        image: ${REGISTRY}/monitoring:${TAG}
        imagePullPolicy: Always
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_ENDPOINTS
          value: "http://zk-api-service:3000,http://admin-dashboard-service:3001"
        - name: ALERT_EMAIL
          valueFrom:
            secretKeyRef:
              name: zk-secrets
              key: alert-email
        resources:
          limits:
            cpu: "300m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60 