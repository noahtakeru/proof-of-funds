apiVersion: v1
kind: Service
metadata:
  name: zk-api-service
  labels:
    app: zk-api
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: zk-api
---
apiVersion: v1
kind: Service
metadata:
  name: admin-dashboard-service
  labels:
    app: admin-dashboard
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: admin-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  labels:
    app: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: monitoring
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zk-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.zkproof.example.com
    - admin.zkproof.example.com
    secretName: zk-tls-secret
  rules:
  - host: api.zkproof.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: zk-api-service
            port:
              number: 3000
  - host: admin.zkproof.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-dashboard-service
            port:
              number: 3001 