
> proof-of-funds@0.1.0 test
> jest --json

{"numFailedTestSuites":39,"numFailedTests":54,"numPassedTestSuites":17,"numPassedTests":111,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":33,"numTodoTests":0,"numTotalTestSuites":56,"numTotalTests":165,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1744794531231,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Error Handling Framework"],"duration":4,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Basic error hierarchy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Basic error hierarchy"},{"ancestorTitles":["Error Handling Framework"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error code and severity levels","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error code and severity levels"},{"ancestorTitles":["Error Handling Framework"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Localized error messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Localized error messages"},{"ancestorTitles":["Error Handling Framework"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error logging","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error logging"},{"ancestorTitles":["Error Handling Framework"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error formatting","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error formatting"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Exponential backoff retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Exponential backoff retry"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Checkpointing for long operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Checkpointing for long operations"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Batch processing with partial failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Batch processing with partial failures"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Transferable checkpoints","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Transferable checkpoints"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Network failure simulation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Network failure simulation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Memory constraint simulation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Memory constraint simulation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Cross-component error propagation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Cross-component error propagation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Batch recovery test","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Batch recovery test"},{"ancestorTitles":["End-to-End Integration Tests"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"End-to-End Integration Tests Complete error handling cycle","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Complete error handling cycle"},{"ancestorTitles":["End-to-End Integration Tests"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"End-to-End Integration Tests Error recovery in realistic scenario","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error recovery in realistic scenario"}],"endTime":1744794532678,"message":"  ● Error Handling Framework › Basic error hierarchy\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Handling Framework › Basic error hierarchy\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Handling Framework › Error code and severity levels\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Handling Framework › Error code and severity levels\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Handling Framework › Localized error messages\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Handling Framework › Localized error messages\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Handling Framework › Error logging\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Handling Framework › Error logging\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Handling Framework › Error formatting\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Handling Framework › Error formatting\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Recovery Mechanisms › Exponential backoff retry\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Recovery Mechanisms › Exponential backoff retry\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Recovery Mechanisms › Checkpointing for long operations\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Recovery Mechanisms › Checkpointing for long operations\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Recovery Mechanisms › Batch processing with partial failures\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Recovery Mechanisms › Batch processing with partial failures\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Recovery Mechanisms › Transferable checkpoints\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Recovery Mechanisms › Transferable checkpoints\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Simulation and Fault Injection › Network failure simulation\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Simulation and Fault Injection › Network failure simulation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Simulation and Fault Injection › Memory constraint simulation\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Simulation and Fault Injection › Memory constraint simulation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Simulation and Fault Injection › Cross-component error propagation\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Simulation and Fault Injection › Cross-component error propagation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● Error Simulation and Fault Injection › Batch recovery test\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● Error Simulation and Fault Injection › Batch recovery test\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● End-to-End Integration Tests › Complete error handling cycle\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● End-to-End Integration Tests › Complete error handling cycle\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n\n  ● End-to-End Integration Tests › Error recovery in realistic scenario\n\n    TypeError: zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.js:22:17)\n\n  ● End-to-End Integration Tests › Error recovery in realistic scenario\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.js:35:17)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.js","startTime":1744794531844,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Error Handling Framework"],"duration":3,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Basic error hierarchy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Basic error hierarchy"},{"ancestorTitles":["Error Handling Framework"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error code and severity levels","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error code and severity levels"},{"ancestorTitles":["Error Handling Framework"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Localized error messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Localized error messages"},{"ancestorTitles":["Error Handling Framework"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error logging","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error logging"},{"ancestorTitles":["Error Handling Framework"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Handling Framework Error formatting","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error formatting"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Exponential backoff retry","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Exponential backoff retry"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Checkpointing for long operations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Checkpointing for long operations"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Batch processing with partial failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Batch processing with partial failures"},{"ancestorTitles":["Recovery Mechanisms"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Recovery Mechanisms Transferable checkpoints","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Transferable checkpoints"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Network failure simulation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Network failure simulation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Memory constraint simulation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Memory constraint simulation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Cross-component error propagation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Cross-component error propagation"},{"ancestorTitles":["Error Simulation and Fault Injection"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Error Simulation and Fault Injection Batch recovery test","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Batch recovery test"},{"ancestorTitles":["End-to-End Integration Tests"],"duration":1,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"End-to-End Integration Tests Complete error handling cycle","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Complete error handling cycle"},{"ancestorTitles":["End-to-End Integration Tests"],"duration":0,"failureDetails":[{},{}],"failureMessages":["TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n    at Object.updateConfig (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:246:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)","TypeError: console.error.mockRestore is not a function\n    at Object.mockRestore (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusHook (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:281:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:254:5)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"End-to-End Integration Tests Error recovery in realistic scenario","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Error recovery in realistic scenario"}],"endTime":1744794532716,"message":"  ● Error Handling Framework › Basic error hierarchy\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Handling Framework › Basic error hierarchy\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Handling Framework › Error code and severity levels\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Handling Framework › Error code and severity levels\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Handling Framework › Localized error messages\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Handling Framework › Localized error messages\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Handling Framework › Error logging\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Handling Framework › Error logging\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Handling Framework › Error formatting\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Handling Framework › Error formatting\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Recovery Mechanisms › Exponential backoff retry\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Recovery Mechanisms › Exponential backoff retry\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Recovery Mechanisms › Checkpointing for long operations\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Recovery Mechanisms › Checkpointing for long operations\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Recovery Mechanisms › Batch processing with partial failures\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Recovery Mechanisms › Batch processing with partial failures\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Recovery Mechanisms › Transferable checkpoints\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Recovery Mechanisms › Transferable checkpoints\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Simulation and Fault Injection › Network failure simulation\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Simulation and Fault Injection › Network failure simulation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Simulation and Fault Injection › Memory constraint simulation\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Simulation and Fault Injection › Memory constraint simulation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Simulation and Fault Injection › Cross-component error propagation\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Simulation and Fault Injection › Cross-component error propagation\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● Error Simulation and Fault Injection › Batch recovery test\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● Error Simulation and Fault Injection › Batch recovery test\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● End-to-End Integration Tests › Complete error handling cycle\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● End-to-End Integration Tests › Complete error handling cycle\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n\n  ● End-to-End Integration Tests › Error recovery in realistic scenario\n\n    TypeError: _zkErrorLogger.zkErrorLogger.updateConfig is not a function\n\n      20 | beforeEach(() => {\n      21 |   // Configure error logger for testing\n    > 22 |   zkErrorLogger.updateConfig({\n         |                 ^\n      23 |     developerMode: true,\n      24 |     destinations: ['console']\n      25 |   });\n\n      at Object.updateConfig (lib/zk/__tests__/zkErrorHandling.test.mjs:22:17)\n\n  ● End-to-End Integration Tests › Error recovery in realistic scenario\n\n    TypeError: console.error.mockRestore is not a function\n\n      33 | afterEach(() => {\n      34 |   // Restore console methods\n    > 35 |   console.error.mockRestore();\n         |                 ^\n      36 |   console.warn.mockRestore();\n      37 |   console.log.mockRestore();\n      38 | });\n\n      at Object.mockRestore (lib/zk/__tests__/zkErrorHandling.test.mjs:35:17)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkErrorHandling.test.mjs","startTime":1744794531840,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GasManager","Constructor"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"GasManager Constructor should initialize with default options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize with default options"},{"ancestorTitles":["GasManager","Constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"GasManager Constructor should initialize with custom options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize with custom options"},{"ancestorTitles":["GasManager","Gas Strategy Management"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.getAvailableGasStrategies is not a function\n    at Object.getAvailableGasStrategies (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:131:37)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Strategy Management should provide list of available gas strategies","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide list of available gas strategies"},{"ancestorTitles":["GasManager","Gas Strategy Management"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.setDefaultGasStrategy is not a function\n    at Object.setDefaultGasStrategy (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:144:18)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Strategy Management should allow setting default gas strategy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should allow setting default gas strategy"},{"ancestorTitles":["GasManager","Gas Price Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateGasPrice is not a function\n    at Object.estimateGasPrice (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:157:43)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Estimation should estimate gas price for standard strategy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should estimate gas price for standard strategy"},{"ancestorTitles":["GasManager","Gas Price Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateGasPrice is not a function\n    at Object.estimateGasPrice (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:173:43)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Estimation should estimate gas price for fast strategy","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should estimate gas price for fast strategy"},{"ancestorTitles":["GasManager","Gas Price Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateGasPrice is not a function\n    at Object.estimateGasPrice (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:184:43)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Estimation should include USD cost estimation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should include USD cost estimation"},{"ancestorTitles":["GasManager","Gas Price Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: legacyGasManager.estimateGasPrice is not a function\n    at Object.estimateGasPrice (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:198:49)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Estimation should handle legacy gas pricing when EIP-1559 not supported","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle legacy gas pricing when EIP-1559 not supported"},{"ancestorTitles":["GasManager","Gas Limit Estimation"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateGasLimit is not a function\n    at Object.estimateGasLimit (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:210:41)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Limit Estimation should estimate gas limit for contract method","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should estimate gas limit for contract method"},{"ancestorTitles":["GasManager","Gas Limit Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateGasLimit is not a function\n    at Object.estimateGasLimit (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:225:41)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Limit Estimation should estimate gas limit for complex method","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should estimate gas limit for complex method"},{"ancestorTitles":["GasManager","Transaction Overrides"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.getTransactionOverrides is not a function\n    at Object.getTransactionOverrides (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:239:42)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Transaction Overrides should generate transaction overrides for EIP-1559","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate transaction overrides for EIP-1559"},{"ancestorTitles":["GasManager","Transaction Overrides"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: legacyGasManager.getTransactionOverrides is not a function\n    at Object.getTransactionOverrides (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:264:48)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Transaction Overrides should generate transaction overrides for legacy transactions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate transaction overrides for legacy transactions"},{"ancestorTitles":["GasManager","Cost Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.calculateTransactionCost is not a function\n    at Object.calculateTransactionCost (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:281:31)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Cost Estimation should calculate transaction cost in ETH","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate transaction cost in ETH"},{"ancestorTitles":["GasManager","Cost Estimation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.estimateTransactionCostUsd is not a function\n    at Object.estimateTransactionCostUsd (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:295:40)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Cost Estimation should estimate transaction cost in USD","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should estimate transaction cost in USD"},{"ancestorTitles":["GasManager","Stuck Transaction Handling"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.suggestReplacementGasPrice is not a function\n    at Object.suggestReplacementGasPrice (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:317:38)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Stuck Transaction Handling should suggest replacement gas price for stuck transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should suggest replacement gas price for stuck transaction"},{"ancestorTitles":["GasManager","Stuck Transaction Handling"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.suggestReplacementFeeData is not a function\n    at Object.suggestReplacementFeeData (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:331:37)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Stuck Transaction Handling should suggest replacement fee data for stuck EIP-1559 transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should suggest replacement fee data for stuck EIP-1559 transaction"},{"ancestorTitles":["GasManager","Gas Price Statistics"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.getGasPriceStatistics is not a function\n    at Object.getGasPriceStatistics (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:371:32)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Statistics should provide gas price statistics","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide gas price statistics"},{"ancestorTitles":["GasManager","Gas Price Statistics"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: gasManager.getGasPriceStatistics is not a function\n    at Object.getGasPriceStatistics (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js:393:32)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"GasManager Gas Price Statistics should handle empty gas price history","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle empty gas price history"}],"endTime":1744794532920,"message":"  ● GasManager › Gas Strategy Management › should provide list of available gas strategies\n\n    TypeError: gasManager.getAvailableGasStrategies is not a function\n\n      129 |   describe('Gas Strategy Management', () => {\n      130 |     test('should provide list of available gas strategies', () => {\n    > 131 |       const strategies = gasManager.getAvailableGasStrategies();\n          |                                     ^\n      132 |       expect(strategies).toBeInstanceOf(Array);\n      133 |       expect(strategies.length).toBeGreaterThan(0);\n      134 |       \n\n      at Object.getAvailableGasStrategies (lib/zk/__tests__/GasManager.test.js:131:37)\n\n  ● GasManager › Gas Strategy Management › should allow setting default gas strategy\n\n    TypeError: gasManager.setDefaultGasStrategy is not a function\n\n      142 |     \n      143 |     test('should allow setting default gas strategy', () => {\n    > 144 |       gasManager.setDefaultGasStrategy('FAST');\n          |                  ^\n      145 |       \n      146 |       // Implementation detail: we can't directly check the internal state\n      147 |       // So we'll check that it doesn't throw an error\n\n      at Object.setDefaultGasStrategy (lib/zk/__tests__/GasManager.test.js:144:18)\n\n  ● GasManager › Gas Price Estimation › should estimate gas price for standard strategy\n\n    TypeError: gasManager.estimateGasPrice is not a function\n\n      155 |   describe('Gas Price Estimation', () => {\n      156 |     test('should estimate gas price for standard strategy', async () => {\n    > 157 |       const estimation = await gasManager.estimateGasPrice('STANDARD');\n          |                                           ^\n      158 |       \n      159 |       expect(estimation).toHaveProperty('estimatedCostWei');\n      160 |       expect(estimation).toHaveProperty('estimatedTimeSeconds');\n\n      at Object.estimateGasPrice (lib/zk/__tests__/GasManager.test.js:157:43)\n\n  ● GasManager › Gas Price Estimation › should estimate gas price for fast strategy\n\n    TypeError: gasManager.estimateGasPrice is not a function\n\n      171 |     \n      172 |     test('should estimate gas price for fast strategy', async () => {\n    > 173 |       const estimation = await gasManager.estimateGasPrice('FAST');\n          |                                           ^\n      174 |       \n      175 |       expect(estimation).toHaveProperty('estimatedCostWei');\n      176 |       expect(estimation).toHaveProperty('strategy', 'fast');\n\n      at Object.estimateGasPrice (lib/zk/__tests__/GasManager.test.js:173:43)\n\n  ● GasManager › Gas Price Estimation › should include USD cost estimation\n\n    TypeError: gasManager.estimateGasPrice is not a function\n\n      182 |     \n      183 |     test('should include USD cost estimation', async () => {\n    > 184 |       const estimation = await gasManager.estimateGasPrice('STANDARD');\n          |                                           ^\n      185 |       \n      186 |       expect(estimation).toHaveProperty('estimatedCostUsd');\n      187 |       expect(typeof estimation.estimatedCostUsd).toBe('number');\n\n      at Object.estimateGasPrice (lib/zk/__tests__/GasManager.test.js:184:43)\n\n  ● GasManager › Gas Price Estimation › should handle legacy gas pricing when EIP-1559 not supported\n\n    TypeError: legacyGasManager.estimateGasPrice is not a function\n\n      196 |       });\n      197 |       \n    > 198 |       const estimation = await legacyGasManager.estimateGasPrice('STANDARD');\n          |                                                 ^\n      199 |       \n      200 |       expect(estimation).toHaveProperty('gasPrice');\n      201 |       expect(estimation).not.toHaveProperty('maxFeePerGas');\n\n      at Object.estimateGasPrice (lib/zk/__tests__/GasManager.test.js:198:49)\n\n  ● GasManager › Gas Limit Estimation › should estimate gas limit for contract method\n\n    TypeError: gasManager.estimateGasLimit is not a function\n\n      208 |       const mockContract = new MockContract(mockProvider);\n      209 |       \n    > 210 |       const gasLimit = await gasManager.estimateGasLimit(\n          |                                         ^\n      211 |         mockContract,\n      212 |         'transfer'\n      213 |       );\n\n      at Object.estimateGasLimit (lib/zk/__tests__/GasManager.test.js:210:41)\n\n  ● GasManager › Gas Limit Estimation › should estimate gas limit for complex method\n\n    TypeError: gasManager.estimateGasLimit is not a function\n\n      223 |       const mockContract = new MockContract(mockProvider);\n      224 |       \n    > 225 |       const gasLimit = await gasManager.estimateGasLimit(\n          |                                         ^\n      226 |         mockContract,\n      227 |         'complexMethod'\n      228 |       );\n\n      at Object.estimateGasLimit (lib/zk/__tests__/GasManager.test.js:225:41)\n\n  ● GasManager › Transaction Overrides › should generate transaction overrides for EIP-1559\n\n    TypeError: gasManager.getTransactionOverrides is not a function\n\n      237 |       const gasLimit = ethers.BigNumber.from(100000);\n      238 |       \n    > 239 |       const overrides = await gasManager.getTransactionOverrides(\n          |                                          ^\n      240 |         gasLimit,\n      241 |         'STANDARD'\n      242 |       );\n\n      at Object.getTransactionOverrides (lib/zk/__tests__/GasManager.test.js:239:42)\n\n  ● GasManager › Transaction Overrides › should generate transaction overrides for legacy transactions\n\n    TypeError: legacyGasManager.getTransactionOverrides is not a function\n\n      262 |       const gasLimit = ethers.BigNumber.from(100000);\n      263 |       \n    > 264 |       const overrides = await legacyGasManager.getTransactionOverrides(\n          |                                                ^\n      265 |         gasLimit,\n      266 |         'STANDARD'\n      267 |       );\n\n      at Object.getTransactionOverrides (lib/zk/__tests__/GasManager.test.js:264:48)\n\n  ● GasManager › Cost Estimation › should calculate transaction cost in ETH\n\n    TypeError: gasManager.calculateTransactionCost is not a function\n\n      279 |       const effectiveGasPrice = ethers.utils.parseUnits('50', 'gwei');\n      280 |       \n    > 281 |       const cost = gasManager.calculateTransactionCost(\n          |                               ^\n      282 |         gasUsed,\n      283 |         effectiveGasPrice\n      284 |       );\n\n      at Object.calculateTransactionCost (lib/zk/__tests__/GasManager.test.js:281:31)\n\n  ● GasManager › Cost Estimation › should estimate transaction cost in USD\n\n    TypeError: gasManager.estimateTransactionCostUsd is not a function\n\n      293 |       const gasLimit = ethers.BigNumber.from(100000);\n      294 |       \n    > 295 |       const costUsd = await gasManager.estimateTransactionCostUsd(\n          |                                        ^\n      296 |         gasLimit,\n      297 |         'STANDARD'\n      298 |       );\n\n      at Object.estimateTransactionCostUsd (lib/zk/__tests__/GasManager.test.js:295:40)\n\n  ● GasManager › Stuck Transaction Handling › should suggest replacement gas price for stuck transaction\n\n    TypeError: gasManager.suggestReplacementGasPrice is not a function\n\n      315 |       const originalGasPrice = ethers.utils.parseUnits('50', 'gwei');\n      316 |       \n    > 317 |       const newGasPrice = gasManager.suggestReplacementGasPrice(originalGasPrice);\n          |                                      ^\n      318 |       \n      319 |       expect(newGasPrice).toBeDefined();\n      320 |       expect(newGasPrice.gt(originalGasPrice)).toBeTruthy();\n\n      at Object.suggestReplacementGasPrice (lib/zk/__tests__/GasManager.test.js:317:38)\n\n  ● GasManager › Stuck Transaction Handling › should suggest replacement fee data for stuck EIP-1559 transaction\n\n    TypeError: gasManager.suggestReplacementFeeData is not a function\n\n      329 |       const originalPriorityFee = ethers.utils.parseUnits('2', 'gwei');\n      330 |       \n    > 331 |       const newFeeData = gasManager.suggestReplacementFeeData(\n          |                                     ^\n      332 |         originalMaxFee,\n      333 |         originalPriorityFee\n      334 |       );\n\n      at Object.suggestReplacementFeeData (lib/zk/__tests__/GasManager.test.js:331:37)\n\n  ● GasManager › Gas Price Statistics › should provide gas price statistics\n\n    TypeError: gasManager.getGasPriceStatistics is not a function\n\n      369 |       ];\n      370 |       \n    > 371 |       const stats = gasManager.getGasPriceStatistics();\n          |                                ^\n      372 |       \n      373 |       expect(stats).toHaveProperty('average');\n      374 |       expect(stats).toHaveProperty('median');\n\n      at Object.getGasPriceStatistics (lib/zk/__tests__/GasManager.test.js:371:32)\n\n  ● GasManager › Gas Price Statistics › should handle empty gas price history\n\n    TypeError: gasManager.getGasPriceStatistics is not a function\n\n      391 |       gasManager.gasPriceHistory = [];\n      392 |       \n    > 393 |       const stats = gasManager.getGasPriceStatistics();\n          |                                ^\n      394 |       \n      395 |       expect(stats).toHaveProperty('average');\n      396 |       expect(stats).toHaveProperty('median');\n\n      at Object.getGasPriceStatistics (lib/zk/__tests__/GasManager.test.js:393:32)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/GasManager.test.js","startTime":1744794531810,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":85,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Platform Deployment Framework should create deployment for Node.js environment","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create deployment for Node.js environment"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":38,"failureDetails":[{"matcherResult":{"actual":"high-performance","expected":"full-local","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"full-local\"\nReceived: \"high-performance\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"full-local\"\nReceived: \"high-performance\"\n    at Object.toBe (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/CrossPlatformDeployment.test.js:60:34)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Cross-Platform Deployment Framework should switch deployment strategies","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should switch deployment strategies"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Platform Deployment Framework should create optimized deployment with correct strategy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create optimized deployment with correct strategy"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Platform Deployment Framework should generate platform-specific configurations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should generate platform-specific configurations"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Platform Deployment Framework should handle platform adapters correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle platform adapters correctly"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Platform Deployment Framework should deploy circuits with appropriate strategy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deploy circuits with appropriate strategy"},{"ancestorTitles":["Cross-Platform Deployment Framework"],"duration":19,"failureDetails":[{"matcherResult":{"actual":"local","expected":"server","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"server\"\nReceived: \"local\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"server\"\nReceived: \"local\"\n    at Object.toBe (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/CrossPlatformDeployment.test.js:145:31)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Cross-Platform Deployment Framework should handle proof operations correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle proof operations correctly"}],"endTime":1744794532955,"message":"  ● Cross-Platform Deployment Framework › should switch deployment strategies\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"full-local\"\n    Received: \"high-performance\"\n\n      58 |     await deployment.initialize();\n      59 |     let status = deployment.getStatus();\n    > 60 |     expect(status.strategy.type).toBe(DeploymentStrategyType.FullLocal);\n         |                                  ^\n      61 |     \n      62 |     // Switch to server-side strategy\n      63 |     deployment.switchStrategy(DeploymentStrategyType.ServerSide);\n\n      at Object.toBe (lib/zk/__tests__/CrossPlatformDeployment.test.js:60:34)\n\n  ● Cross-Platform Deployment Framework › should handle proof operations correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"server\"\n    Received: \"local\"\n\n      143 |     expect(result.success).toBe(true);\n      144 |     // The actual implementation now uses 'server' instead of 'local'\n    > 145 |     expect(result.executedOn).toBe('server');\n          |                               ^\n      146 |     \n      147 |     await deployment.cleanup();\n      148 |   });\n\n      at Object.toBe (lib/zk/__tests__/CrossPlatformDeployment.test.js:145:31)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/CrossPlatformDeployment.test.js","startTime":1744794531912,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["BenchmarkingSystem"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkingSystem should initialize correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize correctly"},{"ancestorTitles":["BenchmarkingSystem"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkingSystem should run a simple benchmark operation","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"status":"passed","title":"should run a simple benchmark operation"},{"ancestorTitles":["BenchmarkingSystem"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkingSystem should compare benchmark results correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should compare benchmark results correctly"},{"ancestorTitles":["BenchmarkingSystem"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BenchmarkingSystem should generate a benchmark report","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should generate a benchmark report"}],"endTime":1744794533086,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/performance/BenchmarkingSystem.test.js","startTime":1744794532965,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["GasManager Tests"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"GasManager Tests Should verify providers are properly mocked","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Should verify providers are properly mocked"}],"endTime":1744794533130,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/GasManager.test.cjs","startTime":1744794532698,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["VerificationPathways Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VerificationPathways Tests Should verify verification pathway mocks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should verify verification pathway mocks"}],"endTime":1744794533132,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/VerificationPathways.test.cjs","startTime":1744794532723,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["DeploymentManager Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DeploymentManager Tests Should initialize with default configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should initialize with default configuration"},{"ancestorTitles":["DeploymentManager Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DeploymentManager Tests Should update configuration correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should update configuration correctly"},{"ancestorTitles":["DeploymentManager Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DeploymentManager Tests Should detect features correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should detect features correctly"},{"ancestorTitles":["DeploymentManager Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DeploymentManager Tests Should provide recommended configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Should provide recommended configuration"}],"endTime":1744794533210,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/deployment/DeploymentManager.test.cjs","startTime":1744794533134,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["JS-SHA3 Module Test"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"JS-SHA3 Module Test should load js-sha3 correctly and generate expected hashes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should load js-sha3 correctly and generate expected hashes"}],"endTime":1744794533242,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ceremony/test-import.test.js","startTime":1744794533135,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Standard Proof should have < 10,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Standard Proof should have < 10,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Threshold Proof should have < 15,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Threshold Proof should have < 15,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Maximum Proof should have < 15,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Maximum Proof should have < 15,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Standard Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Standard Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Threshold Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Threshold Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Maximum Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Maximum Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Standard Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Standard Proof rejects invalid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Threshold Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Threshold Proof rejects invalid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Maximum Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Maximum Proof rejects invalid input"}],"endTime":1744794533246,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitOptimization.test.js","startTime":1744794533089,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContractInterface Tests"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ContractInterface Tests Should verify contracts are properly mocked","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should verify contracts are properly mocked"},{"ancestorTitles":["ContractInterface Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ContractInterface Tests Should verify providers are properly mocked","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Should verify providers are properly mocked"}],"endTime":1744794533259,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/ContractInterface.test.cjs","startTime":1744794532965,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["VerificationCache Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VerificationCache Tests Basic cache operations work as expected","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Basic cache operations work as expected"}],"endTime":1744794533282,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/VerificationCache.test.cjs","startTime":1744794533213,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SnarkjsLoader"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SnarkjsLoader should be properly implemented with client/server fallback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should be properly implemented with client/server fallback"}],"endTime":1744794533301,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/snarkjsLoader.test.js","startTime":1744794533250,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["WebAssembly Infrastructure"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"WebAssembly Infrastructure WASM loader files exist and have correct content","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"WASM loader files exist and have correct content"},{"ancestorTitles":["WebAssembly Infrastructure"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"WebAssembly Infrastructure WASM infrastructure documentation is complete","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"WASM infrastructure documentation is complete"}],"endTime":1744794533313,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/wasmLoader.test.js","startTime":1744794533250,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ResourceMonitor"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor initializes with default configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"initializes with default configuration"},{"ancestorTitles":["ResourceMonitor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor samples resources successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"samples resources successfully"},{"ancestorTitles":["ResourceMonitor"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor registers and calls callback on resource updates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"registers and calls callback on resource updates"},{"ancestorTitles":["ResourceMonitor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor unregisters callbacks correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"unregisters callbacks correctly"},{"ancestorTitles":["ResourceMonitor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor handles battery information correctly when available","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"handles battery information correctly when available"},{"ancestorTitles":["ResourceMonitor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMonitor handles system load calculation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"handles system load calculation"}],"endTime":1744794533351,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/resources/ResourceManagement.test.js","startTime":1744794533262,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Implementation Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Implementation Tests Circuit files should exist","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"Circuit files should exist"},{"ancestorTitles":["Circuit Implementation Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Implementation Tests Standard Proof circuit should have real signature verification","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Standard Proof circuit should have real signature verification"},{"ancestorTitles":["Circuit Implementation Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Implementation Tests Threshold Proof circuit should have real signature verification","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Threshold Proof circuit should have real signature verification"},{"ancestorTitles":["Circuit Implementation Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Implementation Tests Maximum Proof circuit should have real signature verification","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"Maximum Proof circuit should have real signature verification"},{"ancestorTitles":["Circuit Implementation Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Implementation Tests GasManager should use CoinGecko API for ETH price","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"GasManager should use CoinGecko API for ETH price"}],"endTime":1744794533374,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuitImplementation.test.js","startTime":1744794533305,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","1. Extensive Edge Case Input Testing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 1. Extensive Edge Case Input Testing standardProof handles edge cases correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"standardProof handles edge cases correctly"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","1. Extensive Edge Case Input Testing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 1. Extensive Edge Case Input Testing thresholdProof handles edge cases correctly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"thresholdProof handles edge cases correctly"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","1. Extensive Edge Case Input Testing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 1. Extensive Edge Case Input Testing maximumProof handles edge cases correctly","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"maximumProof handles edge cases correctly"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","1. Extensive Edge Case Input Testing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 1. Extensive Edge Case Input Testing Zero values are handled correctly in all circuits","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Zero values are handled correctly in all circuits"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","1. Extensive Edge Case Input Testing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 1. Extensive Edge Case Input Testing Maximum representable values are handled correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Maximum representable values are handled correctly"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests standardProof circuit logic is contradiction-free","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"standardProof circuit logic is contradiction-free"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests thresholdProof circuit logic is contradiction-free","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"thresholdProof circuit logic is contradiction-free"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests maximumProof circuit logic is contradiction-free","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"maximumProof circuit logic is contradiction-free"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests standardProof circuit has proper cryptographic validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"standardProof circuit has proper cryptographic validation"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests thresholdProof circuit has proper cryptographic validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"thresholdProof circuit has proper cryptographic validation"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","2. Symbolic Execution and Logical Contradiction Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 2. Symbolic Execution and Logical Contradiction Tests maximumProof circuit has proper cryptographic validation","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"maximumProof circuit has proper cryptographic validation"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","3. Cross-Circuit Isolation and Vulnerability Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 3. Cross-Circuit Isolation and Vulnerability Tests Circuit components are properly isolated","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"Circuit components are properly isolated"},{"ancestorTitles":["Circuit Edge Case and Symbolic Execution Tests","3. Cross-Circuit Isolation and Vulnerability Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Edge Case and Symbolic Execution Tests 3. Cross-Circuit Isolation and Vulnerability Tests No shared vulnerabilities between circuits","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"No shared vulnerabilities between circuits"}],"endTime":1744794533377,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitEdgeCaseSymbolic.test.js","startTime":1744794533288,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Standard Proof should have < 10,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Standard Proof should have < 10,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Threshold Proof should have < 15,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Threshold Proof should have < 15,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Constraint Counts"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Constraint Counts Maximum Proof should have < 15,000 constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Maximum Proof should have < 15,000 constraints"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Standard Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Standard Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Threshold Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Threshold Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Valid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Valid Input Tests Maximum Proof accepts valid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Maximum Proof accepts valid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Standard Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Standard Proof rejects invalid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Threshold Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Threshold Proof rejects invalid input"},{"ancestorTitles":["Circuit Optimization Tests","Invalid Input Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Optimization Tests Invalid Input Tests Maximum Proof rejects invalid input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Maximum Proof rejects invalid input"}],"endTime":1744794533422,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitOptimization.test.cjs","startTime":1744794533360,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Constraint Satisfaction Tests","1. Primary Constraint Enforcement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 1. Primary Constraint Enforcement Standard Proof enforces exact balance equality","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Standard Proof enforces exact balance equality"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","1. Primary Constraint Enforcement"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 1. Primary Constraint Enforcement Threshold Proof enforces balance >= threshold","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Threshold Proof enforces balance >= threshold"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","1. Primary Constraint Enforcement"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 1. Primary Constraint Enforcement Maximum Proof enforces balance <= maximum","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Maximum Proof enforces balance <= maximum"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","1. Primary Constraint Enforcement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 1. Primary Constraint Enforcement All circuits include wallet ownership verification","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"status":"passed","title":"All circuits include wallet ownership verification"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","2. Boundary Condition Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 2. Boundary Condition Tests Zero value handling in all circuits","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Zero value handling in all circuits"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","2. Boundary Condition Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 2. Boundary Condition Tests Exact boundary value handling","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Exact boundary value handling"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","2. Boundary Condition Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 2. Boundary Condition Tests Minimal difference handling","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"Minimal difference handling"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","2. Boundary Condition Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 2. Boundary Condition Tests Large number handling","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Large number handling"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","3. Cryptographic Soundness Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 3. Cryptographic Soundness Tests All circuits use secure Poseidon hash","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"All circuits use secure Poseidon hash"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","3. Cryptographic Soundness Tests"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 3. Cryptographic Soundness Tests All circuits use nonces for unique proofs","invocations":1,"location":null,"numPassingAsserts":15,"retryReasons":[],"status":"passed","title":"All circuits use nonces for unique proofs"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","4. Cross-Circuit Isolation Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 4. Cross-Circuit Isolation Tests Circuits have different constraint structures","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Circuits have different constraint structures"},{"ancestorTitles":["Circuit Constraint Satisfaction Tests","4. Cross-Circuit Isolation Tests"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Constraint Satisfaction Tests 4. Cross-Circuit Isolation Tests Circuits operate independently with different proof types","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"Circuits operate independently with different proof types"}],"endTime":1744794533431,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitConstraintSatisfaction.test.js","startTime":1744794533319,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["JS-SHA3 Import Test"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JS-SHA3 Import Test js-sha3 import works correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"js-sha3 import works correctly"}],"endTime":1744794533435,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ceremony/verify-import.test.cjs","startTime":1744794533376,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../cjs/e2e-testing' from 'lib/zk/__tests__/cjs/e2e/walletProofWorkflow.test.cjs'\n\n      14 |   createTestRunner,\n      15 |   EnvironmentType\n    > 16 | } = require('../../cjs/e2e-testing');\n         |     ^\n      17 |\n      18 | // Create a test suite for wallet and proof workflows\n      19 | const walletProofSuite = createTestSuite({\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (lib/zk/__tests__/cjs/e2e/walletProofWorkflow.test.cjs:16:5)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/e2e/walletProofWorkflow.test.cjs","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../cjs/performance/BenchmarkingSystem.cjs' from 'lib/zk/__tests__/cjs/performance/BenchmarkingSystem.test.cjs'\n\n       6 |  */\n       7 |\n    >  8 | const { BenchmarkingSystem, BenchmarkType } = require('../../cjs/performance/BenchmarkingSystem.cjs');\n         |                                               ^\n       9 |\n      10 | // Mock Jest environment for running outside Jest\n      11 | global.describe = (name, fn) => {\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (lib/zk/__tests__/cjs/performance/BenchmarkingSystem.test.cjs:8:47)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/cjs/performance/BenchmarkingSystem.test.cjs","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    TypeError: Cannot read properties of undefined (reading 'BROWSER')\n\n      149 |   {\n      150 |     name: 'Desktop Chrome',\n    > 151 |     environmentType: EnvironmentType.BROWSER,\n          |                                      ^\n      152 |     features: {\n      153 |       webAssembly: true,\n      154 |       webWorkers: true,\n\n      at Object.BROWSER (lib/zk/__tests__/e2e/walletProofWorkflow.test.js:151:38)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/e2e/walletProofWorkflow.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../SecurityAuditLogger.js' from 'lib/zk/__tests__/ceremony/TrustedSetupManager.test.cjs'\n\n       9 |\n      10 | // Mock the large dependencies\n    > 11 | jest.mock('../../SecurityAuditLogger.js', () => {\n         |      ^\n      12 |   return jest.fn().mockImplementation(() => ({\n      13 |     log: jest.fn(),\n      14 |     logWarning: jest.fn(),\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (lib/zk/__tests__/ceremony/TrustedSetupManager.test.cjs:11:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ceremony/TrustedSetupManager.test.cjs","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../zkCircuitRegistry.js' from 'lib/zk/__tests__/circuits/standardProof.test.js'\n\n      18 |\n      19 | // Import modules to test\n    > 20 | import { getCircuitMemoryRequirements } from '../../zkCircuitRegistry.js';\n         | ^\n      21 | import { deriveStandardProofParameters } from '../../zkCircuitParameterDerivation.js';\n      22 | import { createBenchmark } from '../../benchmarkSuite.js';\n      23 | import { createMemoryProfiler } from '../../memoryProfiler.js';\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/circuits/standardProof.test.js:20:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/standardProof.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["NonceValidator"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should validate a valid nonce","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate a valid nonce"},{"ancestorTitles":["NonceValidator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should reject an already used nonce","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject an already used nonce"},{"ancestorTitles":["NonceValidator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should allow the same nonce for different users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow the same nonce for different users"},{"ancestorTitles":["NonceValidator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should reject a nonce with an expired timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject a nonce with an expired timestamp"},{"ancestorTitles":["NonceValidator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should reject a nonce with a future timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject a nonce with a future timestamp"},{"ancestorTitles":["NonceValidator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should allow a nonce with timestamp within tolerance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow a nonce with timestamp within tolerance"},{"ancestorTitles":["NonceValidator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should reject invalid nonce formats","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should reject invalid nonce formats"},{"ancestorTitles":["NonceValidator"],"duration":1104,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 3\nReceived:    0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThanOrEqual(expected)\n\nExpected: >= 3\nReceived:    0\n    at Object.toBeGreaterThanOrEqual (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/src/security/__tests__/NonceValidator.test.js:99:26)"],"fullName":"NonceValidator should clean up expired nonces","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should clean up expired nonces"},{"ancestorTitles":["NonceValidator"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/src/security/__tests__/NonceValidator.test.js:116:29)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"NonceValidator should enforce strict ordering when enabled","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should enforce strict ordering when enabled"},{"ancestorTitles":["NonceValidator"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should return stats on validation history","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return stats on validation history"},{"ancestorTitles":["NonceValidator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NonceValidator should reset nonce cache and statistics","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should reset nonce cache and statistics"}],"endTime":1744794533744,"message":"  ● NonceValidator › should clean up expired nonces\n\n    expect(received).toBeGreaterThanOrEqual(expected)\n\n    Expected: >= 3\n    Received:    0\n\n       97 |     \n       98 |     // Should have removed the expired nonces\n    >  99 |     expect(removedCount).toBeGreaterThanOrEqual(3);\n          |                          ^\n      100 |     \n      101 |     // Should now allow reuse of previously used nonces\n      102 |     const result = validator.validateNonce('cleanup-test-1', 'user1');\n\n      at Object.toBeGreaterThanOrEqual (lib/zk/src/security/__tests__/NonceValidator.test.js:99:26)\n\n  ● NonceValidator › should enforce strict ordering when enabled\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      114 |       // First nonce should be accepted\n      115 |       const result1 = strictValidator.validateNonce('100', 'orderUser');\n    > 116 |       expect(result1.valid).toBe(true);\n          |                             ^\n      117 |       \n      118 |       // Higher nonce should be accepted\n      119 |       const result2 = strictValidator.validateNonce('200', 'orderUser');\n\n      at Object.toBe (lib/zk/src/security/__tests__/NonceValidator.test.js:116:29)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/src/security/__tests__/NonceValidator.test.js","startTime":1744794531837,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../zkUtils.js' from 'lib/zk/__tests__/zkUtils.test.js'\n\n      24 | import { ZK_PROOF_TYPES } from '../../../config/constants.js';\n      25 |\n    > 26 | import { \n         | ^\n      27 |   generateZKProof, \n      28 |   verifyZKProof, \n      29 |   serializeZKProof, \n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/zkUtils.test.js:26:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkUtils.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../zkCircuitRegistry.js' from 'lib/zk/__tests__/circuits/maximumProof.test.js'\n\n      18 |\n      19 | // Import modules to test\n    > 20 | import { getCircuitMemoryRequirements } from '../../zkCircuitRegistry.js';\n         | ^\n      21 | import { deriveMaximumProofParameters } from '../../zkCircuitParameterDerivation.js';\n      22 | import { createBenchmark } from '../../benchmarkSuite.js';\n      23 | import { createMemoryProfiler } from '../../memoryProfiler.js';\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/circuits/maximumProof.test.js:20:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/maximumProof.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../../zkCircuitRegistry.js' from 'lib/zk/__tests__/circuits/thresholdProof.test.js'\n\n      18 |\n      19 | // Import modules to test\n    > 20 | import { getCircuitMemoryRequirements } from '../../zkCircuitRegistry.js';\n         | ^\n      21 | import { deriveThresholdProofParameters } from '../../zkCircuitParameterDerivation.js';\n      22 | import { createBenchmark } from '../../benchmarkSuite.js';\n      23 | import { createMemoryProfiler } from '../../memoryProfiler.js';\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/circuits/thresholdProof.test.js:20:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/thresholdProof.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    ReferenceError: /Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/deployment/DeploymentManager.test.js: The module factory of `jest.mock()` is not allowed to reference any out-of-scope variables.\n    Invalid variable access: EnvironmentType\n    Allowed objects: AbortController, AbortSignal, AggregateError, Array, ArrayBuffer, Atomics, BigInt, BigInt64Array, BigUint64Array, Blob, Boolean, BroadcastChannel, Buffer, ByteLengthQueuingStrategy, CompressionStream, CountQueuingStrategy, DOMException, DataView, Date, DecompressionStream, Error, EvalError, Event, EventTarget, FinalizationRegistry, Float32Array, Float64Array, FormData, Function, Generator, GeneratorFunction, Headers, Infinity, Int16Array, Int32Array, Int8Array, InternalError, Intl, JSON, Map, Math, MessageChannel, MessageEvent, MessagePort, NaN, Number, Object, Performance, Promise, Proxy, RangeError, ReadableByteStreamController, ReadableStream, ReadableStreamBYOBReader, ReadableStreamBYOBRequest, ReadableStreamDefaultController, ReadableStreamDefaultReader, ReferenceError, Reflect, RegExp, Request, Response, Set, SharedArrayBuffer, String, Symbol, SyntaxError, TextDecoder, TextDecoderStream, TextEncoder, TextEncoderStream, TransformStream, TransformStreamDefaultController, TypeError, URIError, URL, URLSearchParams, Uint16Array, Uint32Array, Uint8Array, Uint8ClampedArray, WeakMap, WeakRef, WeakSet, WebAssembly, WritableStream, WritableStreamDefaultController, WritableStreamDefaultWriter, __dirname, __filename, arguments, atob, btoa, clearImmediate, clearInterval, clearTimeout, console, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent, escape, eval, expect, exports, fetch, global, globalThis, isFinite, isNaN, jest, module, parseFloat, parseInt, performance, process, queueMicrotask, require, setImmediate, setInterval, setTimeout, structuredClone, undefined, unescape.\n    Note: This is a precaution to guard against uninitialized mock variables. If it is ensured that the mock is required lazily, variable names prefixed with `mock` (case insensitive) are permitted.\n\n      13 |     EnvironmentDetector: jest.fn().mockImplementation(() => {\n      14 |       return {\n    > 15 |         detectEnvironment: jest.fn().mockReturnValue(EnvironmentType.Node),\n         |                                                      ^^^^^^^^^^^^^^^\n      16 |         detectFeatures: jest.fn().mockReturnValue({\n      17 |           environment: EnvironmentType.Node,\n      18 |           supportsWebWorkers: false,\n\n      at File.buildCodeFrameError (node_modules/@babel/core/src/transformation/file/file.ts:247:12)\n      at NodePath.buildError [as buildCodeFrameError] (node_modules/@babel/traverse/src/path/index.ts:141:21)\n      at call (node_modules/@babel/traverse/src/visitors.ts:303:14)\n      at NodePath.call [as _call] (node_modules/@babel/traverse/src/path/context.ts:36:20)\n      at NodePath.call (node_modules/@babel/traverse/src/path/context.ts:21:18)\n      at NodePath.call [as visit] (node_modules/@babel/traverse/src/path/context.ts:97:31)\n      at TraversalContext.visit [as visitQueue] (node_modules/@babel/traverse/src/context.ts:148:16)\n      at TraversalContext.visitQueue [as visitMultiple] (node_modules/@babel/traverse/src/context.ts:99:17)\n      at TraversalContext.visitMultiple [as visit] (node_modules/@babel/traverse/src/context.ts:178:19)\n      at visit (node_modules/@babel/traverse/src/traverse-node.ts:40:17)\n      at NodePath.visit (node_modules/@babel/traverse/src/path/context.ts:104:33)\n      at TraversalContext.visit [as visitQueue] (node_modules/@babel/traverse/src/context.ts:148:16)\n      at TraversalContext.visitQueue [as visitSingle] (node_modules/@babel/traverse/src/context.ts:109:19)\n      at TraversalContext.visitSingle [as visit] (node_modules/@babel/traverse/src/context.ts:180:19)\n      at visit (node_modules/@babel/traverse/src/traverse-node.ts:40:17)\n      at traverse (node_modules/@babel/traverse/src/index.ts:83:15)\n      at transformFile (node_modules/@babel/core/src/transformation/index.ts:119:15)\n          at transformFile.next (<anonymous>)\n      at transformFile (node_modules/@babel/core/src/transformation/index.ts:49:12)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/deployment/DeploymentManager.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../SecureKeyManager' from 'lib/zk/__tests__/zkSecureInputs.test.js'\n\n      17 |\n      18 | // Mock dependencies\n    > 19 | jest.mock('../SecureKeyManager', () => ({\n         |      ^\n      20 |   __esModule: true,\n      21 |   default: {\n      22 |     generateSecurePassword: jest.fn().mockReturnValue('generated-password'),\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.mock (lib/zk/__tests__/zkSecureInputs.test.js:19:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkSecureInputs.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../zkProofSerializer.js' from 'lib/zk/__tests__/zkProofSerializer.test.js'\n\n      4 |\n      5 | // Import module to test\n    > 6 | import zkProofSerializer from '../zkProofSerializer.js';\n        | ^\n      7 | import { Buffer } from 'buffer';\n      8 |\n      9 | // Mock window and Buffer for Base64 encoding/decoding\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/zkProofSerializer.test.js:6:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkProofSerializer.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../zkCircuitRegistry.js' from 'lib/zk/__tests__/zkCircuitRegistry.test.js'\n\n      14 |\n      15 | // Import module to test\n    > 16 | import zkCircuitRegistry from '../zkCircuitRegistry.js';\n         | ^\n      17 |\n      18 | describe('ZK Circuit Registry', () => {\n      19 |   // Sample registry data for tests\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/zkCircuitRegistry.test.js:16:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkCircuitRegistry.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Your test suite must contain at least one test.\n\n      at onResult (node_modules/@jest/core/build/TestScheduler.js:133:18)\n      at node_modules/@jest/core/build/TestScheduler.js:254:19\n      at node_modules/emittery/index.js:363:13\n          at Array.map (<anonymous>)\n      at Emittery.emit (node_modules/emittery/index.js:361:23)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkProxyClient.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../deviceCapabilities.js' from 'lib/zk/__tests__/zkCircuitParameterDerivation.test.js'\n\n      23 |\n      24 | // Create mock for deviceCapabilities & zkCircuitRegistry\n    > 25 | jest.mock('../deviceCapabilities.js', () => ({\n         |      ^\n      26 |   getDeviceCapabilities: jest.fn().mockReturnValue({\n      27 |     supportsWebAssembly: true,\n      28 |     supportsWebCrypto: true,\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.mock (lib/zk/__tests__/zkCircuitParameterDerivation.test.js:25:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkCircuitParameterDerivation.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    ReferenceError: Cannot access '_filename' before initialization\n\n       8 |\n       9 | // Get the current directory\n    > 10 | const __filename = fileURLToPath(import.meta.url);\n         |                                  ^\n      11 | const __dirname = dirname(__filename);\n      12 |\n      13 | describe('Development Environment Setup', () => {\n\n      at Object._filename (lib/zk/__tests__/setup.test.js:10:34)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/setup.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../walletHelpers.js' from 'lib/zk/src/temporaryWalletManager.js'\n\n    Require stack:\n      lib/zk/src/temporaryWalletManager.js\n      lib/zk/__tests__/temporaryWalletManager.test.js\n\n      38 |  */\n      39 |\n    > 40 | import { getBIP44Path, deriveWalletFromMnemonic } from '../walletHelpers.js';\n         | ^\n      41 | import { getEthers } from '../ethersUtils.js';\n      42 | import zkErrorHandlerModule from './zkErrorHandler.js';\n      43 | import zkErrorLoggerModule from './zkErrorLogger.js';\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/src/temporaryWalletManager.js:40:1)\n      at Object.require (lib/zk/__tests__/temporaryWalletManager.test.js:9:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/temporaryWalletManager.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../secureStorage' from 'lib/zk/__tests__/secureStorage.test.js'\n\n       6 |  */\n       7 |\n    >  8 | import secureStorage from '../secureStorage';\n         | ^\n       9 | import secureKeyManager from '../SecureKeyManager';\n      10 |\n      11 | // Mock sessionStorage\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/secureStorage.test.js:8:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/secureStorage.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../zkUtils.js' from 'lib/zk/__tests__/realImplementation.test.js'\n\n      23 | const fs = require('fs');\n      24 | const path = require('path');\n    > 25 | const { stringifyBigInts, parseBigInts, generateZKProof, verifyZKProof } = require('../zkUtils.js');\n         |                                                                            ^\n      26 | const zkConfig = require('../real-zk-config.js');\n      27 |\n      28 | // Test inputs\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/realImplementation.test.js:25:76)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/realImplementation.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../progressTracker.js' from 'lib/zk/__tests__/progressTracker.test.js'\n\n       7 |\n       8 | // Import module to test\n    >  9 | import ProgressTracker from '../progressTracker.js';\n         | ^\n      10 |\n      11 | describe('Progress Tracker', () => {\n      12 |   describe('initialization', () => {\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/progressTracker.test.js:9:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/progressTracker.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkApiEndpoints.test.js: Unexpected token (64:2)\n\n      62 |       });\n      63 |     }\n    > 64 |   };\n         |   ^\n      65 | });\n      66 |\n      67 | jest.mock('../../../pages/api/zk/verify', () => {\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)\n      at Parser.raise [as unexpected] (node_modules/@babel/parser/src/tokenizer/index.ts:1537:16)\n      at Parser.unexpected [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1330:16)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:723:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:221:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:212:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3123:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:212:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:642:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:437:17)\n      at Parser.parseStatementLike [as parseModuleItem] (node_modules/@babel/parser/src/parser/statement.ts:374:17)\n      at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1402:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1376:10)\n      at Parser.parseBlockBody [as parseProgram] (node_modules/@babel/parser/src/parser/statement.ts:225:10)\n      at Parser.parseProgram [as parseTopLevel] (node_modules/@babel/parser/src/parser/statement.ts:203:25)\n      at Parser.parseTopLevel [as parse] (node_modules/@babel/parser/src/parser/index.ts:93:10)\n      at parse (node_modules/@babel/parser/src/index.ts:92:38)\n      at parser (node_modules/@babel/core/src/parser/index.ts:28:19)\n          at parser.next (<anonymous>)\n      at normalizeFile (node_modules/@babel/core/src/transformation/normalize-file.ts:49:24)\n          at normalizeFile.next (<anonymous>)\n      at run (node_modules/@babel/core/src/transformation/index.ts:40:36)\n          at run.next (<anonymous>)\n      at transform (node_modules/@babel/core/src/transform.ts:29:20)\n          at transform.next (<anonymous>)\n      at evaluateSync (node_modules/gensync/index.js:251:28)\n      at sync (node_modules/gensync/index.js:89:14)\n      at fn (node_modules/@babel/core/src/errors/rewrite-stack-trace.ts:99:14)\n      at transformSync (node_modules/@babel/core/src/transform.ts:66:52)\n      at ScriptTransformer.transformSource (node_modules/@jest/transform/build/ScriptTransformer.js:545:31)\n      at ScriptTransformer._transformAndBuildScript (node_modules/@jest/transform/build/ScriptTransformer.js:674:40)\n      at ScriptTransformer.transform (node_modules/@jest/transform/build/ScriptTransformer.js:726:19)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/zkApiEndpoints.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../deviceCapabilities.js' from 'lib/zk/__tests__/memoryManager.test.js'\n\n      18 |\n      19 | // Mock device capabilities\n    > 20 | jest.mock('../deviceCapabilities.js', () => ({\n         |      ^\n      21 |   getDeviceCapabilities: jest.fn().mockReturnValue({\n      22 |     availableMemory: 1024, // Mock 1GB available\n      23 |     totalMemory: 4096,     // Mock 4GB total\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.mock (lib/zk/__tests__/memoryManager.test.js:20:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/memoryManager.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../index.js' from 'lib/zk/__tests__/infrastructureIntegration.test.js'\n\n       9 |\n      10 | // Import from the main index file to test the integration\n    > 11 | import { \n         | ^\n      12 |   initializeZkSystem, \n      13 |   detectWasmSupport, \n      14 |   snarkjsLoader,\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/infrastructureIntegration.test.js:11:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/infrastructureIntegration.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../deviceCapabilities.js' from 'lib/zk/__tests__/deviceCapabilities.test.js'\n\n      24 |\n      25 | // Import module to test\n    > 26 | import deviceCapabilities from '../deviceCapabilities.js';\n         | ^\n      27 |\n      28 | describe('Device Capabilities Detection', () => {\n      29 |   describe('getDeviceCapabilities', () => {\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/deviceCapabilities.test.js:26:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/deviceCapabilities.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../browserCompatibility.js' from 'lib/zk/__tests__/clientServerFallback.test.js'\n\n      25 |\n      26 | // Mock modules\n    > 27 | jest.mock('../browserCompatibility.js', () => ({\n         |      ^\n      28 |   detectFeatures: jest.fn(),\n      29 |   __esModule: true,\n      30 | }));\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.mock (lib/zk/__tests__/clientServerFallback.test.js:27:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/clientServerFallback.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../src/VerificationCache.js' from 'lib/zk/__tests__/VerificationCache.test.js'\n\n       8 |  */\n       9 |\n    > 10 | import { VerificationCache } from '../src/VerificationCache.js';\n         | ^\n      11 |\n      12 | describe('VerificationCache', () => {\n      13 |   let cache;\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/VerificationCache.test.js:10:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/VerificationCache.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../SecureKeyManager' from 'lib/zk/__tests__/SessionSecurityManager.test.js'\n\n      10 |\n      11 | // Mock dependencies\n    > 12 | jest.mock('../SecureKeyManager', () => ({\n         |      ^\n      13 |   __esModule: true,\n      14 |   default: {\n      15 |     generateSecurePassword: jest.fn().mockReturnValue('generated-password'),\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.mock (lib/zk/__tests__/SessionSecurityManager.test.js:12:6)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/SessionSecurityManager.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../TamperDetection' from 'lib/zk/__tests__/TamperDetection.test.js'\n\n       5 |  */\n       6 |\n    >  7 | import TamperDetection from '../TamperDetection';\n         | ^\n       8 |\n       9 | // Mock Web Crypto API for testing\n      10 | const mockSubtle = {\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/TamperDetection.test.js:7:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/TamperDetection.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../SecurityAuditLogger' from 'lib/zk/__tests__/SecurityAuditLogger.test.js'\n\n       5 |  */\n       6 |\n    >  7 | import SecurityAuditLogger from '../SecurityAuditLogger';\n         | ^\n       8 |\n       9 | // Mock sessionStorage\n      10 | const mockSessionStorage = (() => {\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/SecurityAuditLogger.test.js:7:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/SecurityAuditLogger.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    TypeError: Cannot read properties of undefined (reading 'COMPATIBILITY_WASM_UNAVAILABLE')\n\n      55 |     if (!crypto || !crypto.subtle) {\n      56 |       const error = new CompatibilityError('Web Crypto API is not available in this environment', {\n    > 57 |         code: ErrorCode.COMPATIBILITY_WASM_UNAVAILABLE,\n         |                         ^\n      58 |         operationId: 'SecureKeyManager:constructor',\n      59 |         userFixable: true,\n      60 |         recoverable: false,\n\n      at new COMPATIBILITY_WASM_UNAVAILABLE (lib/zk/src/SecureKeyManager.js:57:25)\n      at Object.<anonymous> (lib/zk/__tests__/SecureKeyManager.test.js:12:26)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/SecureKeyManager.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    TypeError: Cannot destructure property 'suggestGarbageCollection' of '_memoryManager.default' as it is undefined.\n\n      11 | // Re-export everything from the module\n      12 | export const {\n    > 13 |   suggestGarbageCollection,\n         |   ^\n      14 |   secureMemoryWipe,\n      15 |   getMemoryUsage,\n      16 |   checkMemoryAvailability,\n\n      at Object.suggestGarbageCollection (lib/zk/src/memoryManager.js:13:3)\n      at Object.require (lib/zk/src/zkUtils.js:56:1)\n      at Object.require (lib/zk/__tests__/mockValidation.test.js:13:17)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/mockValidation.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ProofSizeOptimization.test.js: Unexpected reserved word 'package'. (73:12)\n\n      71 |     test('should create and extract compressed package', () => {\n      72 |       // Create a compressed package\n    > 73 |       const package = proofSizeOptimization.createCompressedProofPackage(sampleProof);\n         |             ^\n      74 |       \n      75 |       // Validate the package\n      76 |       expect(package).toBeDefined();\n\n      at constructor (node_modules/@babel/parser/src/parse-error.ts:95:45)\n      at Parser.toParseError [as raise] (node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)\n      at Parser.raise [as checkReservedWord] (node_modules/@babel/parser/src/parser/expression.ts:2823:12)\n      at Parser.checkReservedWord [as parseIdentifierName] (node_modules/@babel/parser/src/parser/expression.ts:2785:12)\n      at Parser.parseIdentifierName [as parseIdentifier] (node_modules/@babel/parser/src/parser/expression.ts:2750:23)\n      at Parser.parseIdentifier [as parseBindingAtom] (node_modules/@babel/parser/src/parser/lval.ts:391:17)\n      at Parser.parseBindingAtom [as parseVarId] (node_modules/@babel/parser/src/parser/statement.ts:1582:21)\n      at Parser.parseVarId [as parseVar] (node_modules/@babel/parser/src/parser/statement.ts:1541:12)\n      at Parser.parseVar [as parseVarStatement] (node_modules/@babel/parser/src/parser/statement.ts:1210:10)\n      at Parser.parseVarStatement [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:566:21)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:437:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:386:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1403:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1376:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1344:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2571:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2512:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1803:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1140:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:723:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:252:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3128:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:251:17)\n      at Parser.parseMaybeAssignAllowIn [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2734:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1019:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:897:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:786:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:744:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:729:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:221:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:212:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3123:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:212:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:642:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:437:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:386:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1403:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1376:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1344:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2571:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2512:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1803:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1140:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:723:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:252:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3128:12)\n      at Parser.allowInAnd [as parseMaybeAssignAllowIn] (node_modules/@babel/parser/src/parser/expression.ts:251:17)\n      at Parser.parseMaybeAssignAllowIn [as parseExprListItem] (node_modules/@babel/parser/src/parser/expression.ts:2734:18)\n      at Parser.parseExprListItem [as parseCallExpressionArguments] (node_modules/@babel/parser/src/parser/expression.ts:1019:14)\n      at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (node_modules/@babel/parser/src/parser/expression.ts:897:29)\n      at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (node_modules/@babel/parser/src/parser/expression.ts:786:19)\n      at Parser.parseSubscript [as parseSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:744:19)\n      at Parser.parseSubscripts [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:729:17)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at Parser.parseMaybeAssign [as parseExpressionBase] (node_modules/@babel/parser/src/parser/expression.ts:221:23)\n      at parseExpressionBase (node_modules/@babel/parser/src/parser/expression.ts:212:39)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3123:16)\n      at Parser.allowInAnd [as parseExpression] (node_modules/@babel/parser/src/parser/expression.ts:212:17)\n      at Parser.parseExpression [as parseStatementContent] (node_modules/@babel/parser/src/parser/statement.ts:642:23)\n      at Parser.parseStatementContent [as parseStatementLike] (node_modules/@babel/parser/src/parser/statement.ts:437:17)\n      at Parser.parseStatementLike [as parseStatementListItem] (node_modules/@babel/parser/src/parser/statement.ts:386:17)\n      at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1403:16)\n      at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (node_modules/@babel/parser/src/parser/statement.ts:1376:10)\n      at Parser.parseBlockBody [as parseBlock] (node_modules/@babel/parser/src/parser/statement.ts:1344:10)\n      at Parser.parseBlock [as parseFunctionBody] (node_modules/@babel/parser/src/parser/expression.ts:2571:24)\n      at Parser.parseFunctionBody [as parseArrowExpression] (node_modules/@babel/parser/src/parser/expression.ts:2512:10)\n      at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (node_modules/@babel/parser/src/parser/expression.ts:1803:12)\n      at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (node_modules/@babel/parser/src/parser/expression.ts:1140:21)\n      at Parser.parseExprAtom [as parseExprSubscripts] (node_modules/@babel/parser/src/parser/expression.ts:723:23)\n      at Parser.parseExprSubscripts [as parseUpdate] (node_modules/@babel/parser/src/parser/expression.ts:702:21)\n      at Parser.parseUpdate [as parseMaybeUnary] (node_modules/@babel/parser/src/parser/expression.ts:664:23)\n      at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (node_modules/@babel/parser/src/parser/expression.ts:398:14)\n      at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (node_modules/@babel/parser/src/parser/expression.ts:410:23)\n      at Parser.parseExprOps [as parseMaybeConditional] (node_modules/@babel/parser/src/parser/expression.ts:365:23)\n      at Parser.parseMaybeConditional [as parseMaybeAssign] (node_modules/@babel/parser/src/parser/expression.ts:296:21)\n      at parseMaybeAssign (node_modules/@babel/parser/src/parser/expression.ts:252:12)\n      at Parser.callback [as allowInAnd] (node_modules/@babel/parser/src/parser/expression.ts:3128:12)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ProofSizeOptimization.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../src/VerificationPathways.js' from 'lib/zk/__tests__/VerificationPathways.test.js'\n\n       9 |\n      10 | import { ethers } from 'ethers';\n    > 11 | import { \n         | ^\n      12 |   VerificationPathways,\n      13 |   VerificationMethod,\n      14 |   VerificationConfidence\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/VerificationPathways.test.js:11:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/VerificationPathways.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1744794543197,"message":"  ● Test suite failed to run\n\n    Cannot find module '../src/contracts/index.js' from 'lib/zk/__tests__/ContractInterface.test.js'\n\n       9 |\n      10 | import { ethers } from 'ethers';\n    > 11 | import { \n         | ^\n      12 |   ContractInterface, \n      13 |   AbiVersionManager, \n      14 |   ContractAddressRegistry,\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.require (lib/zk/__tests__/ContractInterface.test.js:11:1)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/ContractInterface.test.js","startTime":1744794543197,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison standardProof maintains security properties after optimization","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"standardProof maintains security properties after optimization"},{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison thresholdProof maintains security properties after optimization","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"thresholdProof maintains security properties after optimization"},{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison maximumProof maintains security properties after optimization","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"maximumProof maintains security properties after optimization"},{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison standardProof optimizations don't break circuit logic","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"standardProof optimizations don't break circuit logic"},{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison thresholdProof optimizations don't break circuit logic","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"thresholdProof optimizations don't break circuit logic"},{"ancestorTitles":["Circuit Differential Testing","1. Original vs Patched Circuit Comparison"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 1. Original vs Patched Circuit Comparison maximumProof optimizations don't break circuit logic","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"maximumProof optimizations don't break circuit logic"},{"ancestorTitles":["Circuit Differential Testing","2. Cross-Version Input Compatibility"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 2. Cross-Version Input Compatibility standardProof inputs are compatible across versions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"standardProof inputs are compatible across versions"},{"ancestorTitles":["Circuit Differential Testing","2. Cross-Version Input Compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 2. Cross-Version Input Compatibility thresholdProof inputs are compatible across versions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"thresholdProof inputs are compatible across versions"},{"ancestorTitles":["Circuit Differential Testing","2. Cross-Version Input Compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 2. Cross-Version Input Compatibility maximumProof inputs are compatible across versions","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"maximumProof inputs are compatible across versions"},{"ancestorTitles":["Circuit Differential Testing","3. Security Invariants Across Versions"],"duration":31,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at toBeGreaterThan (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:380:40)\n    at Object.<anonymous> (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-each/build/bind.js:81:13)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Circuit Differential Testing 3. Security Invariants Across Versions standardProof maintains security invariants after patching","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"failed","title":"standardProof maintains security invariants after patching"},{"ancestorTitles":["Circuit Differential Testing","3. Security Invariants Across Versions"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 3. Security Invariants Across Versions thresholdProof maintains security invariants after patching","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"thresholdProof maintains security invariants after patching"},{"ancestorTitles":["Circuit Differential Testing","3. Security Invariants Across Versions"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 3. Security Invariants Across Versions maximumProof maintains security invariants after patching","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"maximumProof maintains security invariants after patching"},{"ancestorTitles":["Circuit Differential Testing","4. Circuit Version Characteristics"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Standard Proof Circuit (version 1.0.0)\n * Proves exact balance amount for a given address\n *·\n * Input:\n * - address: Public input, the wallet address\n * - amount: Public input, the exact amount to prove\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <10,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized signature verification\n *\n * ---------- NON-TECHNICAL EXPLANATION ----------\n * This is a mathematical template for creating a specific type of privacy proof - one that\n * proves you have EXACTLY a certain amount in your wallet (not more, not less).\n *·\n * Think of this like a specialized verification form that:\n * 1. Takes your wallet address and the exact amount you claim to have\n * 2. Privately checks that your actual balance matches this exact amount\n * 3. Verifies you actually own the wallet (through a digital signature)\n * 4. Creates mathematical proof that these checks passed without revealing your actual balance\n *·\n * It's like proving to someone you have exactly $10,000 in your bank account without\n * showing your bank statement or giving access to your account.\n *·\n * NOTE: This circuit contains some simplified/placeholder components (particularly in\n * the signature verification) that would need improvement for a production system.\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";·\n// Custom bit decomposition optimized for standard proof\ntemplate OptimizedBits(n) {\n    signal input in;\n    signal output bits[n];·····\n    var lc = 0;\n    for (var i = 0; i < n; i++) {\n        bits[i] <-- (in >> i) & 1;\n        bits[i] * (bits[i] - 1) === 0; // Constraint: must be binary\n        lc += (1 << i) * bits[i];\n    }·····\n    // Single constraint instead of multiple equality constraints\n    lc === in;\n}·\n// Efficient standard proof template with optimized constraints\ntemplate StandardProof() {\n    // Public inputs\n    signal input address; // Wallet address (Ethereum address as field element)\n    signal input amount;  // Amount to prove ownership of·····\n    // Private inputs\n    signal input nonce;           // Random value to prevent correlation\n    signal input actualBalance;   // Actual balance in wallet (must equal amount)\n    signal input signature[2];    // Signature components\n    signal input walletSecret;    // Secret value proving ownership·····\n    // Step 1: Verify actual balance equals claimed amount\n    // This is the key constraint for standard proof\n    component amountChecker = IsEqual();\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== amount;\n    amountChecker.out === 1; // Must equal 1 (true)·····\n    // Step 2: Verify wallet ownership with efficient signature check\n    // Instead of full EdDSA implementation, we use a simplified ownership verification\n    // that achieves the same security guarantee with fewer constraints·····\n    /* ---------- NON-TECHNICAL EXPLANATION ----------\n     * This section verifies you own the wallet by checking your digital signature.\n     *·\n     * Think of a signature like a special stamp only you can create:\n     * 1. The \\\"walletSecret\\\" is like your private stamping tool\n     * 2. The \\\"nonce\\\" is a random number added to prevent reuse of your proof\n     * 3. The system checks that your stamp matches what's expected for your address\n     *·\n     * NOTE: This is using a simplified verification model. A real system would use\n     * a more robust signature check, but this is optimized for development.\n     */·····\n    // Create a Poseidon hash of the wallet secret to verify it corresponds to the address\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // The output of this hash should match a derived value from the address\n    // This simulates signature verification but uses fewer constraints\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal signatureValid;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    signatureValid <== signatureCheck.out;·····\n    // Ensure the signature is valid\n    signatureValid === 1;·····\n    // Step 3: Hash inputs for verification commitment\n    // Using Poseidon as it's optimized for ZK circuits (fewer constraints than Keccak/SHA)\n    /* ---------- NON-TECHNICAL EXPLANATION ----------\n     * This final step creates a secure \\\"seal\\\" for the verification:\n     *·\n     * 1. It combines your address, claimed amount, and the random nonce\n     * 2. It creates a cryptographic \\\"fingerprint\\\" of this information\n     * 3. This fingerprint becomes the output of the proof\n     *·\n     * This is like creating an official seal on a document that can be·\n     * verified later without seeing the actual contents of the document.\n     */\n    component commitmentHasher = Poseidon(3);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== amount;\n    commitmentHasher.inputs[2] <== nonce;·····\n    // Output the hash result for verification\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;\n}·\n// Define the main component with address and amount as public inputs\ncomponent main = StandardProof();\n\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Standard Proof Circuit (version 1.0.0)\n * Proves exact balance amount for a given address\n *·\n * Input:\n * - address: Public input, the wallet address\n * - amount: Public input, the exact amount to prove\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <10,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized signature verification\n *\n * ---------- NON-TECHNICAL EXPLANATION ----------\n * This is a mathematical template for creating a specific type of privacy proof - one that\n * proves you have EXACTLY a certain amount in your wallet (not more, not less).\n *·\n * Think of this like a specialized verification form that:\n * 1. Takes your wallet address and the exact amount you claim to have\n * 2. Privately checks that your actual balance matches this exact amount\n * 3. Verifies you actually own the wallet (through a digital signature)\n * 4. Creates mathematical proof that these checks passed without revealing your actual balance\n *·\n * It's like proving to someone you have exactly $10,000 in your bank account without\n * showing your bank statement or giving access to your account.\n *·\n * NOTE: This circuit contains some simplified/placeholder components (particularly in\n * the signature verification) that would need improvement for a production system.\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";·\n// Custom bit decomposition optimized for standard proof\ntemplate OptimizedBits(n) {\n    signal input in;\n    signal output bits[n];·····\n    var lc = 0;\n    for (var i = 0; i < n; i++) {\n        bits[i] <-- (in >> i) & 1;\n        bits[i] * (bits[i] - 1) === 0; // Constraint: must be binary\n        lc += (1 << i) * bits[i];\n    }·····\n    // Single constraint instead of multiple equality constraints\n    lc === in;\n}·\n// Efficient standard proof template with optimized constraints\ntemplate StandardProof() {\n    // Public inputs\n    signal input address; // Wallet address (Ethereum address as field element)\n    signal input amount;  // Amount to prove ownership of·····\n    // Private inputs\n    signal input nonce;           // Random value to prevent correlation\n    signal input actualBalance;   // Actual balance in wallet (must equal amount)\n    signal input signature[2];    // Signature components\n    signal input walletSecret;    // Secret value proving ownership·····\n    // Step 1: Verify actual balance equals claimed amount\n    // This is the key constraint for standard proof\n    component amountChecker = IsEqual();\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== amount;\n    amountChecker.out === 1; // Must equal 1 (true)·····\n    // Step 2: Verify wallet ownership with efficient signature check\n    // Instead of full EdDSA implementation, we use a simplified ownership verification\n    // that achieves the same security guarantee with fewer constraints·····\n    /* ---------- NON-TECHNICAL EXPLANATION ----------\n     * This section verifies you own the wallet by checking your digital signature.\n     *·\n     * Think of a signature like a special stamp only you can create:\n     * 1. The \\\"walletSecret\\\" is like your private stamping tool\n     * 2. The \\\"nonce\\\" is a random number added to prevent reuse of your proof\n     * 3. The system checks that your stamp matches what's expected for your address\n     *·\n     * NOTE: This is using a simplified verification model. A real system would use\n     * a more robust signature check, but this is optimized for development.\n     */·····\n    // Create a Poseidon hash of the wallet secret to verify it corresponds to the address\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // The output of this hash should match a derived value from the address\n    // This simulates signature verification but uses fewer constraints\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal signatureValid;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    signatureValid <== signatureCheck.out;·····\n    // Ensure the signature is valid\n    signatureValid === 1;·····\n    // Step 3: Hash inputs for verification commitment\n    // Using Poseidon as it's optimized for ZK circuits (fewer constraints than Keccak/SHA)\n    /* ---------- NON-TECHNICAL EXPLANATION ----------\n     * This final step creates a secure \\\"seal\\\" for the verification:\n     *·\n     * 1. It combines your address, claimed amount, and the random nonce\n     * 2. It creates a cryptographic \\\"fingerprint\\\" of this information\n     * 3. This fingerprint becomes the output of the proof\n     *·\n     * This is like creating an official seal on a document that can be·\n     * verified later without seeing the actual contents of the document.\n     */\n    component commitmentHasher = Poseidon(3);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== amount;\n    commitmentHasher.inputs[2] <== nonce;·····\n    // Output the hash result for verification\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;\n}·\n// Define the main component with address and amount as public inputs\ncomponent main = StandardProof();\n\"\n    at toContain (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n    at Object.<anonymous> (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-each/build/bind.js:81:13)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Circuit Differential Testing 4. Circuit Version Characteristics standardProof has consistent circuit characteristics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"standardProof has consistent circuit characteristics"},{"ancestorTitles":["Circuit Differential Testing","4. Circuit Version Characteristics"],"duration":0,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Threshold Proof Circuit (version 1.0.0)\n * Proves that balance is at least the threshold amount\n *·\n * Input:\n * - address: Public input, the wallet address\n * - threshold: Public input, the minimum amount\n * - actualBalance: Private input, the actual balance amount\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <15,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized comparison operations\n * - Reduced constraint complexity for signature verification\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n// Optimized greater than or equal comparison for threshold proof\n// This uses fewer constraints than the standard library version\ntemplate OptimizedGreaterEqThan(n) {\n    assert(n <= 252);\n    signal input in[2]; // in[0] >= in[1]?\n    signal output out;·\n    // Use a custom difference check\n    signal diff <-- in[0] - in[1];\n    signal isNonNegative <-- diff >= 0 ? 1 : 0;\n    isNonNegative * (isNonNegative - 1) === 0; // Binary constraint·····\n    // For large numbers, we need to verify with bit operations\n    // only decompose what's needed for verification\n    component num2Bits = Num2Bits(n + 1);\n    num2Bits.in <== in[0] - in[1] + (1 << n); // Add 2^n to handle negative differences·····\n    // MSB will be 0 if in[0] >= in[1] (non-negative difference)\n    // MSB will be 1 if in[0] < in[1] (negative difference)\n    signal msb <== num2Bits.out[n];·····\n    // Result is 1 if MSB is 0 (non-negative)\n    out <== 1 - msb;\n}·\n// Main Threshold Proof template\ntemplate ThresholdProof() {\n    // Public inputs\n    signal input address;    // Wallet address (Ethereum address as field element)\n    signal input threshold;  // Minimum amount to prove·····\n    // Private inputs\n    signal input actualBalance;  // Actual balance in wallet\n    signal input nonce;          // Random value to prevent correlation\n    signal input signature[2];   // Simplified signature components\n    signal input walletSecret;   // Secret value proving ownership·····\n    // Step 1: Verify wallet ownership with efficient signature check\n    // Instead of full EdDSA which is constraint-heavy, use a simplified approach\n    // while maintaining security semantics·····\n    // Create a Poseidon hash of the wallet secret\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // Derive a value from the address for comparison\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal ownershipVerified;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    ownershipVerified <== signatureCheck.out;·····\n    // Ensure ownership is verified\n    ownershipVerified === 1;·····\n    // Step 2: Verify actual balance is >= threshold (primary constraint for threshold proof)\n    // Use our optimized comparison component which uses fewer constraints\n    component amountChecker = OptimizedGreaterEqThan(128); // 128-bit is sufficient for typical balances\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== threshold;·····\n    // The comparison must be valid (1=true)\n    amountChecker.out === 1;·····\n    // Step 3: Create commitment hash for verification\n    // Use Poseidon which is optimized for ZK circuits\n    component commitmentHasher = Poseidon(4);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== threshold;\n    commitmentHasher.inputs[2] <== nonce;\n    commitmentHasher.inputs[3] <== greaterEqCheck.out; // Include verification result in hash·····\n    // Output the commitment hash\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;\n}·\ncomponent main = ThresholdProof();\n\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Threshold Proof Circuit (version 1.0.0)\n * Proves that balance is at least the threshold amount\n *·\n * Input:\n * - address: Public input, the wallet address\n * - threshold: Public input, the minimum amount\n * - actualBalance: Private input, the actual balance amount\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <15,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized comparison operations\n * - Reduced constraint complexity for signature verification\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n// Optimized greater than or equal comparison for threshold proof\n// This uses fewer constraints than the standard library version\ntemplate OptimizedGreaterEqThan(n) {\n    assert(n <= 252);\n    signal input in[2]; // in[0] >= in[1]?\n    signal output out;·\n    // Use a custom difference check\n    signal diff <-- in[0] - in[1];\n    signal isNonNegative <-- diff >= 0 ? 1 : 0;\n    isNonNegative * (isNonNegative - 1) === 0; // Binary constraint·····\n    // For large numbers, we need to verify with bit operations\n    // only decompose what's needed for verification\n    component num2Bits = Num2Bits(n + 1);\n    num2Bits.in <== in[0] - in[1] + (1 << n); // Add 2^n to handle negative differences·····\n    // MSB will be 0 if in[0] >= in[1] (non-negative difference)\n    // MSB will be 1 if in[0] < in[1] (negative difference)\n    signal msb <== num2Bits.out[n];·····\n    // Result is 1 if MSB is 0 (non-negative)\n    out <== 1 - msb;\n}·\n// Main Threshold Proof template\ntemplate ThresholdProof() {\n    // Public inputs\n    signal input address;    // Wallet address (Ethereum address as field element)\n    signal input threshold;  // Minimum amount to prove·····\n    // Private inputs\n    signal input actualBalance;  // Actual balance in wallet\n    signal input nonce;          // Random value to prevent correlation\n    signal input signature[2];   // Simplified signature components\n    signal input walletSecret;   // Secret value proving ownership·····\n    // Step 1: Verify wallet ownership with efficient signature check\n    // Instead of full EdDSA which is constraint-heavy, use a simplified approach\n    // while maintaining security semantics·····\n    // Create a Poseidon hash of the wallet secret\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // Derive a value from the address for comparison\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal ownershipVerified;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    ownershipVerified <== signatureCheck.out;·····\n    // Ensure ownership is verified\n    ownershipVerified === 1;·····\n    // Step 2: Verify actual balance is >= threshold (primary constraint for threshold proof)\n    // Use our optimized comparison component which uses fewer constraints\n    component amountChecker = OptimizedGreaterEqThan(128); // 128-bit is sufficient for typical balances\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== threshold;·····\n    // The comparison must be valid (1=true)\n    amountChecker.out === 1;·····\n    // Step 3: Create commitment hash for verification\n    // Use Poseidon which is optimized for ZK circuits\n    component commitmentHasher = Poseidon(4);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== threshold;\n    commitmentHasher.inputs[2] <== nonce;\n    commitmentHasher.inputs[3] <== greaterEqCheck.out; // Include verification result in hash·····\n    // Output the commitment hash\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;\n}·\ncomponent main = ThresholdProof();\n\"\n    at toContain (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n    at Object.<anonymous> (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-each/build/bind.js:81:13)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Circuit Differential Testing 4. Circuit Version Characteristics thresholdProof has consistent circuit characteristics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"thresholdProof has consistent circuit characteristics"},{"ancestorTitles":["Circuit Differential Testing","4. Circuit Version Characteristics"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Maximum Proof Circuit (version 1.0.0)\n * Proves that balance is at most the maximum amount\n *·\n * Input:\n * - address: Public input, the wallet address\n * - maximum: Public input, the maximum amount\n * - actualBalance: Private input, the actual balance amount\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <15,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized less-than-or-equal comparison\n * - Simplified signature verification for constraint reduction\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n// Optimized less than or equal comparison for maximum proof\n// This uses fewer constraints than the standard library version\ntemplate OptimizedLessEqThan(n) {\n    assert(n <= 252);\n    signal input in[2]; // in[0] <= in[1]?\n    signal output out;·\n    // Use our optimized greater or equal check with reversed inputs\n    // a <= b is equivalent to b >= a\n    component geCheck = GreaterEqThan(n);\n    geCheck.in[0] <== in[1]; // Reverse the inputs\n    geCheck.in[1] <== in[0];·····\n    // The output directly tells us if in[0] <= in[1]\n    out <== geCheck.out;\n}·\n// Main Maximum Proof template\ntemplate MaximumProof() {\n    // Public inputs\n    signal input address;    // Wallet address (Ethereum address as field element)\n    signal input maximum;    // Maximum amount to prove·····\n    // Private inputs\n    signal input actualBalance;  // Actual balance in wallet\n    signal input nonce;          // Random value to prevent correlation\n    signal input signature[2];   // Simplified signature components\n    signal input walletSecret;   // Secret value proving ownership·····\n    // Step 1: Verify wallet ownership with efficient signature check\n    // Instead of EdDSA for constraint optimization\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // Derive a value from the address for comparison\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal ownershipVerified;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    ownershipVerified <== signatureCheck.out;·····\n    // Ensure ownership is verified\n    ownershipVerified === 1;·····\n    // Step 2: Verify actual balance is <= maximum (main constraint)\n    // Use the standard LessEqThan component with 128-bit precision\n    // This is adequate for typical balance amounts while reducing constraints\n    component amountChecker = LessEqThan(128);·\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== maximum;·····\n    // The comparison must be valid (1=true)\n    amountChecker.out === 1;·····\n    // Step 3: Create secure commitment hash for verification\n    // Use Poseidon hash which is optimized for ZK circuits\n    component commitmentHasher = Poseidon(4);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== maximum;\n    commitmentHasher.inputs[2] <== nonce;\n    commitmentHasher.inputs[3] <== lessEqCheck.out; // Include verification result·····\n    // Output the commitment hash for verification\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;·····\n    // Add an additional constraint to enforce non-negative balance\n    // This prevents underflow attacks with minimal constraint cost\n    component nonNegativeCheck = GreaterEqThan(128);\n    nonNegativeCheck.in[0] <== actualBalance;\n    nonNegativeCheck.in[1] <== 0;\n    nonNegativeCheck.out === 1;\n}·\ncomponent main = MaximumProof();\n\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"pragma circom\"\nReceived string:    \"/*\n * Maximum Proof Circuit (version 1.0.0)\n * Proves that balance is at most the maximum amount\n *·\n * Input:\n * - address: Public input, the wallet address\n * - maximum: Public input, the maximum amount\n * - actualBalance: Private input, the actual balance amount\n * - nonce: Private input, random value to prevent correlation\n * - signature: Private input, signature proving ownership of wallet\n *\n * Optimization goals:\n * - Constraint count target: <15,000 constraints\n * - Uses Poseidon hash for efficient ZK operations\n * - Optimized less-than-or-equal comparison\n * - Simplified signature verification for constraint reduction\n */·\ninclude \\\"../patched-circomlib/circuits/poseidon.circom\\\";\ninclude \\\"../patched-circomlib/circuits/comparators.circom\\\";\ninclude \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n// Optimized less than or equal comparison for maximum proof\n// This uses fewer constraints than the standard library version\ntemplate OptimizedLessEqThan(n) {\n    assert(n <= 252);\n    signal input in[2]; // in[0] <= in[1]?\n    signal output out;·\n    // Use our optimized greater or equal check with reversed inputs\n    // a <= b is equivalent to b >= a\n    component geCheck = GreaterEqThan(n);\n    geCheck.in[0] <== in[1]; // Reverse the inputs\n    geCheck.in[1] <== in[0];·····\n    // The output directly tells us if in[0] <= in[1]\n    out <== geCheck.out;\n}·\n// Main Maximum Proof template\ntemplate MaximumProof() {\n    // Public inputs\n    signal input address;    // Wallet address (Ethereum address as field element)\n    signal input maximum;    // Maximum amount to prove·····\n    // Private inputs\n    signal input actualBalance;  // Actual balance in wallet\n    signal input nonce;          // Random value to prevent correlation\n    signal input signature[2];   // Simplified signature components\n    signal input walletSecret;   // Secret value proving ownership·····\n    // Step 1: Verify wallet ownership with efficient signature check\n    // Instead of EdDSA for constraint optimization\n    component secretHasher = Poseidon(2);\n    secretHasher.inputs[0] <== walletSecret;\n    secretHasher.inputs[1] <== nonce;·····\n    // Derive a value from the address for comparison\n    component addressDerivedValue = Poseidon(1);\n    addressDerivedValue.inputs[0] <== address;·····\n    // Real signature verification - comparing the hashed wallet secret to the address-derived value\n    signal ownershipVerified;\n    component signatureCheck = IsEqual();\n    signatureCheck.in[0] <== secretHasher.out;\n    signatureCheck.in[1] <== addressDerivedValue.out;\n    ownershipVerified <== signatureCheck.out;·····\n    // Ensure ownership is verified\n    ownershipVerified === 1;·····\n    // Step 2: Verify actual balance is <= maximum (main constraint)\n    // Use the standard LessEqThan component with 128-bit precision\n    // This is adequate for typical balance amounts while reducing constraints\n    component amountChecker = LessEqThan(128);·\n    amountChecker.in[0] <== actualBalance;\n    amountChecker.in[1] <== maximum;·····\n    // The comparison must be valid (1=true)\n    amountChecker.out === 1;·····\n    // Step 3: Create secure commitment hash for verification\n    // Use Poseidon hash which is optimized for ZK circuits\n    component commitmentHasher = Poseidon(4);\n    commitmentHasher.inputs[0] <== address;\n    commitmentHasher.inputs[1] <== maximum;\n    commitmentHasher.inputs[2] <== nonce;\n    commitmentHasher.inputs[3] <== lessEqCheck.out; // Include verification result·····\n    // Output the commitment hash for verification\n    signal output hash_result;\n    hash_result <== commitmentHasher.out;·····\n    // Add an additional constraint to enforce non-negative balance\n    // This prevents underflow attacks with minimal constraint cost\n    component nonNegativeCheck = GreaterEqThan(128);\n    nonNegativeCheck.in[0] <== actualBalance;\n    nonNegativeCheck.in[1] <== 0;\n    nonNegativeCheck.out === 1;\n}·\ncomponent main = MaximumProof();\n\"\n    at toContain (/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n    at Object.<anonymous> (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-each/build/bind.js:81:13)\n    at Promise.then.completed (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/karpel/Documents/GitHub/proof-of-funds/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Circuit Differential Testing 4. Circuit Version Characteristics maximumProof has consistent circuit characteristics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"maximumProof has consistent circuit characteristics"},{"ancestorTitles":["Circuit Differential Testing","4. Circuit Version Characteristics"],"duration":2452,"failureDetails":[],"failureMessages":[],"fullName":"Circuit Differential Testing 4. Circuit Version Characteristics Circuit characteristics are distinct by proof type","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"Circuit characteristics are distinct by proof type"}],"endTime":1744794535170,"message":"  ● Circuit Differential Testing › 3. Security Invariants Across Versions › standardProof maintains security invariants after patching\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      378 |         \n      379 |         // The security invariant should exist in both versions\n    > 380 |         expect(originalMatches.length).toBeGreaterThan(0);\n          |                                        ^\n      381 |         expect(patchedMatches.length).toBeGreaterThan(0);\n      382 |         \n      383 |         // Log any concerning differences for review\n\n      at toBeGreaterThan (lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:380:40)\n\n  ● Circuit Differential Testing › 4. Circuit Version Characteristics › standardProof has consistent circuit characteristics\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"pragma circom\"\n    Received string:    \"/*\n     * Standard Proof Circuit (version 1.0.0)\n     * Proves exact balance amount for a given address\n     *·\n     * Input:\n     * - address: Public input, the wallet address\n     * - amount: Public input, the exact amount to prove\n     * - nonce: Private input, random value to prevent correlation\n     * - signature: Private input, signature proving ownership of wallet\n     *\n     * Optimization goals:\n     * - Constraint count target: <10,000 constraints\n     * - Uses Poseidon hash for efficient ZK operations\n     * - Optimized signature verification\n     *\n     * ---------- NON-TECHNICAL EXPLANATION ----------\n     * This is a mathematical template for creating a specific type of privacy proof - one that\n     * proves you have EXACTLY a certain amount in your wallet (not more, not less).\n     *·\n     * Think of this like a specialized verification form that:\n     * 1. Takes your wallet address and the exact amount you claim to have\n     * 2. Privately checks that your actual balance matches this exact amount\n     * 3. Verifies you actually own the wallet (through a digital signature)\n     * 4. Creates mathematical proof that these checks passed without revealing your actual balance\n     *·\n     * It's like proving to someone you have exactly $10,000 in your bank account without\n     * showing your bank statement or giving access to your account.\n     *·\n     * NOTE: This circuit contains some simplified/placeholder components (particularly in\n     * the signature verification) that would need improvement for a production system.\n     */·\n    include \\\"../patched-circomlib/circuits/poseidon.circom\\\";\n    include \\\"../patched-circomlib/circuits/bitify.circom\\\";\n    include \\\"../patched-circomlib/circuits/comparators.circom\\\";·\n    // Custom bit decomposition optimized for standard proof\n    template OptimizedBits(n) {\n        signal input in;\n        signal output bits[n];·····\n        var lc = 0;\n        for (var i = 0; i < n; i++) {\n            bits[i] <-- (in >> i) & 1;\n            bits[i] * (bits[i] - 1) === 0; // Constraint: must be binary\n            lc += (1 << i) * bits[i];\n        }·····\n        // Single constraint instead of multiple equality constraints\n        lc === in;\n    }·\n    // Efficient standard proof template with optimized constraints\n    template StandardProof() {\n        // Public inputs\n        signal input address; // Wallet address (Ethereum address as field element)\n        signal input amount;  // Amount to prove ownership of·····\n        // Private inputs\n        signal input nonce;           // Random value to prevent correlation\n        signal input actualBalance;   // Actual balance in wallet (must equal amount)\n        signal input signature[2];    // Signature components\n        signal input walletSecret;    // Secret value proving ownership·····\n        // Step 1: Verify actual balance equals claimed amount\n        // This is the key constraint for standard proof\n        component amountChecker = IsEqual();\n        amountChecker.in[0] <== actualBalance;\n        amountChecker.in[1] <== amount;\n        amountChecker.out === 1; // Must equal 1 (true)·····\n        // Step 2: Verify wallet ownership with efficient signature check\n        // Instead of full EdDSA implementation, we use a simplified ownership verification\n        // that achieves the same security guarantee with fewer constraints·····\n        /* ---------- NON-TECHNICAL EXPLANATION ----------\n         * This section verifies you own the wallet by checking your digital signature.\n         *·\n         * Think of a signature like a special stamp only you can create:\n         * 1. The \\\"walletSecret\\\" is like your private stamping tool\n         * 2. The \\\"nonce\\\" is a random number added to prevent reuse of your proof\n         * 3. The system checks that your stamp matches what's expected for your address\n         *·\n         * NOTE: This is using a simplified verification model. A real system would use\n         * a more robust signature check, but this is optimized for development.\n         */·····\n        // Create a Poseidon hash of the wallet secret to verify it corresponds to the address\n        component secretHasher = Poseidon(2);\n        secretHasher.inputs[0] <== walletSecret;\n        secretHasher.inputs[1] <== nonce;·····\n        // The output of this hash should match a derived value from the address\n        // This simulates signature verification but uses fewer constraints\n        component addressDerivedValue = Poseidon(1);\n        addressDerivedValue.inputs[0] <== address;·····\n        // Real signature verification - comparing the hashed wallet secret to the address-derived value\n        signal signatureValid;\n        component signatureCheck = IsEqual();\n        signatureCheck.in[0] <== secretHasher.out;\n        signatureCheck.in[1] <== addressDerivedValue.out;\n        signatureValid <== signatureCheck.out;·····\n        // Ensure the signature is valid\n        signatureValid === 1;·····\n        // Step 3: Hash inputs for verification commitment\n        // Using Poseidon as it's optimized for ZK circuits (fewer constraints than Keccak/SHA)\n        /* ---------- NON-TECHNICAL EXPLANATION ----------\n         * This final step creates a secure \\\"seal\\\" for the verification:\n         *·\n         * 1. It combines your address, claimed amount, and the random nonce\n         * 2. It creates a cryptographic \\\"fingerprint\\\" of this information\n         * 3. This fingerprint becomes the output of the proof\n         *·\n         * This is like creating an official seal on a document that can be·\n         * verified later without seeing the actual contents of the document.\n         */\n        component commitmentHasher = Poseidon(3);\n        commitmentHasher.inputs[0] <== address;\n        commitmentHasher.inputs[1] <== amount;\n        commitmentHasher.inputs[2] <== nonce;·····\n        // Output the hash result for verification\n        signal output hash_result;\n        hash_result <== commitmentHasher.out;\n    }·\n    // Define the main component with address and amount as public inputs\n    component main = StandardProof();\n    \"\n\n      396 |       \n      397 |       // Check for consistent circuit characteristics\n    > 398 |       expect(source).toContain('pragma circom');\n          |                      ^\n      399 |       expect(source).toContain('component main');\n      400 |       \n      401 |       // Each circuit should have documented optimization goals\n\n      at toContain (lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n\n  ● Circuit Differential Testing › 4. Circuit Version Characteristics › thresholdProof has consistent circuit characteristics\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"pragma circom\"\n    Received string:    \"/*\n     * Threshold Proof Circuit (version 1.0.0)\n     * Proves that balance is at least the threshold amount\n     *·\n     * Input:\n     * - address: Public input, the wallet address\n     * - threshold: Public input, the minimum amount\n     * - actualBalance: Private input, the actual balance amount\n     * - nonce: Private input, random value to prevent correlation\n     * - signature: Private input, signature proving ownership of wallet\n     *\n     * Optimization goals:\n     * - Constraint count target: <15,000 constraints\n     * - Uses Poseidon hash for efficient ZK operations\n     * - Optimized comparison operations\n     * - Reduced constraint complexity for signature verification\n     */·\n    include \\\"../patched-circomlib/circuits/poseidon.circom\\\";\n    include \\\"../patched-circomlib/circuits/comparators.circom\\\";\n    include \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n    // Optimized greater than or equal comparison for threshold proof\n    // This uses fewer constraints than the standard library version\n    template OptimizedGreaterEqThan(n) {\n        assert(n <= 252);\n        signal input in[2]; // in[0] >= in[1]?\n        signal output out;·\n        // Use a custom difference check\n        signal diff <-- in[0] - in[1];\n        signal isNonNegative <-- diff >= 0 ? 1 : 0;\n        isNonNegative * (isNonNegative - 1) === 0; // Binary constraint·····\n        // For large numbers, we need to verify with bit operations\n        // only decompose what's needed for verification\n        component num2Bits = Num2Bits(n + 1);\n        num2Bits.in <== in[0] - in[1] + (1 << n); // Add 2^n to handle negative differences·····\n        // MSB will be 0 if in[0] >= in[1] (non-negative difference)\n        // MSB will be 1 if in[0] < in[1] (negative difference)\n        signal msb <== num2Bits.out[n];·····\n        // Result is 1 if MSB is 0 (non-negative)\n        out <== 1 - msb;\n    }·\n    // Main Threshold Proof template\n    template ThresholdProof() {\n        // Public inputs\n        signal input address;    // Wallet address (Ethereum address as field element)\n        signal input threshold;  // Minimum amount to prove·····\n        // Private inputs\n        signal input actualBalance;  // Actual balance in wallet\n        signal input nonce;          // Random value to prevent correlation\n        signal input signature[2];   // Simplified signature components\n        signal input walletSecret;   // Secret value proving ownership·····\n        // Step 1: Verify wallet ownership with efficient signature check\n        // Instead of full EdDSA which is constraint-heavy, use a simplified approach\n        // while maintaining security semantics·····\n        // Create a Poseidon hash of the wallet secret\n        component secretHasher = Poseidon(2);\n        secretHasher.inputs[0] <== walletSecret;\n        secretHasher.inputs[1] <== nonce;·····\n        // Derive a value from the address for comparison\n        component addressDerivedValue = Poseidon(1);\n        addressDerivedValue.inputs[0] <== address;·····\n        // Real signature verification - comparing the hashed wallet secret to the address-derived value\n        signal ownershipVerified;\n        component signatureCheck = IsEqual();\n        signatureCheck.in[0] <== secretHasher.out;\n        signatureCheck.in[1] <== addressDerivedValue.out;\n        ownershipVerified <== signatureCheck.out;·····\n        // Ensure ownership is verified\n        ownershipVerified === 1;·····\n        // Step 2: Verify actual balance is >= threshold (primary constraint for threshold proof)\n        // Use our optimized comparison component which uses fewer constraints\n        component amountChecker = OptimizedGreaterEqThan(128); // 128-bit is sufficient for typical balances\n        amountChecker.in[0] <== actualBalance;\n        amountChecker.in[1] <== threshold;·····\n        // The comparison must be valid (1=true)\n        amountChecker.out === 1;·····\n        // Step 3: Create commitment hash for verification\n        // Use Poseidon which is optimized for ZK circuits\n        component commitmentHasher = Poseidon(4);\n        commitmentHasher.inputs[0] <== address;\n        commitmentHasher.inputs[1] <== threshold;\n        commitmentHasher.inputs[2] <== nonce;\n        commitmentHasher.inputs[3] <== greaterEqCheck.out; // Include verification result in hash·····\n        // Output the commitment hash\n        signal output hash_result;\n        hash_result <== commitmentHasher.out;\n    }·\n    component main = ThresholdProof();\n    \"\n\n      396 |       \n      397 |       // Check for consistent circuit characteristics\n    > 398 |       expect(source).toContain('pragma circom');\n          |                      ^\n      399 |       expect(source).toContain('component main');\n      400 |       \n      401 |       // Each circuit should have documented optimization goals\n\n      at toContain (lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n\n  ● Circuit Differential Testing › 4. Circuit Version Characteristics › maximumProof has consistent circuit characteristics\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"pragma circom\"\n    Received string:    \"/*\n     * Maximum Proof Circuit (version 1.0.0)\n     * Proves that balance is at most the maximum amount\n     *·\n     * Input:\n     * - address: Public input, the wallet address\n     * - maximum: Public input, the maximum amount\n     * - actualBalance: Private input, the actual balance amount\n     * - nonce: Private input, random value to prevent correlation\n     * - signature: Private input, signature proving ownership of wallet\n     *\n     * Optimization goals:\n     * - Constraint count target: <15,000 constraints\n     * - Uses Poseidon hash for efficient ZK operations\n     * - Optimized less-than-or-equal comparison\n     * - Simplified signature verification for constraint reduction\n     */·\n    include \\\"../patched-circomlib/circuits/poseidon.circom\\\";\n    include \\\"../patched-circomlib/circuits/comparators.circom\\\";\n    include \\\"../patched-circomlib/circuits/bitify.circom\\\";·\n    // Optimized less than or equal comparison for maximum proof\n    // This uses fewer constraints than the standard library version\n    template OptimizedLessEqThan(n) {\n        assert(n <= 252);\n        signal input in[2]; // in[0] <= in[1]?\n        signal output out;·\n        // Use our optimized greater or equal check with reversed inputs\n        // a <= b is equivalent to b >= a\n        component geCheck = GreaterEqThan(n);\n        geCheck.in[0] <== in[1]; // Reverse the inputs\n        geCheck.in[1] <== in[0];·····\n        // The output directly tells us if in[0] <= in[1]\n        out <== geCheck.out;\n    }·\n    // Main Maximum Proof template\n    template MaximumProof() {\n        // Public inputs\n        signal input address;    // Wallet address (Ethereum address as field element)\n        signal input maximum;    // Maximum amount to prove·····\n        // Private inputs\n        signal input actualBalance;  // Actual balance in wallet\n        signal input nonce;          // Random value to prevent correlation\n        signal input signature[2];   // Simplified signature components\n        signal input walletSecret;   // Secret value proving ownership·····\n        // Step 1: Verify wallet ownership with efficient signature check\n        // Instead of EdDSA for constraint optimization\n        component secretHasher = Poseidon(2);\n        secretHasher.inputs[0] <== walletSecret;\n        secretHasher.inputs[1] <== nonce;·····\n        // Derive a value from the address for comparison\n        component addressDerivedValue = Poseidon(1);\n        addressDerivedValue.inputs[0] <== address;·····\n        // Real signature verification - comparing the hashed wallet secret to the address-derived value\n        signal ownershipVerified;\n        component signatureCheck = IsEqual();\n        signatureCheck.in[0] <== secretHasher.out;\n        signatureCheck.in[1] <== addressDerivedValue.out;\n        ownershipVerified <== signatureCheck.out;·····\n        // Ensure ownership is verified\n        ownershipVerified === 1;·····\n        // Step 2: Verify actual balance is <= maximum (main constraint)\n        // Use the standard LessEqThan component with 128-bit precision\n        // This is adequate for typical balance amounts while reducing constraints\n        component amountChecker = LessEqThan(128);·\n        amountChecker.in[0] <== actualBalance;\n        amountChecker.in[1] <== maximum;·····\n        // The comparison must be valid (1=true)\n        amountChecker.out === 1;·····\n        // Step 3: Create secure commitment hash for verification\n        // Use Poseidon hash which is optimized for ZK circuits\n        component commitmentHasher = Poseidon(4);\n        commitmentHasher.inputs[0] <== address;\n        commitmentHasher.inputs[1] <== maximum;\n        commitmentHasher.inputs[2] <== nonce;\n        commitmentHasher.inputs[3] <== lessEqCheck.out; // Include verification result·····\n        // Output the commitment hash for verification\n        signal output hash_result;\n        hash_result <== commitmentHasher.out;·····\n        // Add an additional constraint to enforce non-negative balance\n        // This prevents underflow attacks with minimal constraint cost\n        component nonNegativeCheck = GreaterEqThan(128);\n        nonNegativeCheck.in[0] <== actualBalance;\n        nonNegativeCheck.in[1] <== 0;\n        nonNegativeCheck.out === 1;\n    }·\n    component main = MaximumProof();\n    \"\n\n      396 |       \n      397 |       // Check for consistent circuit characteristics\n    > 398 |       expect(source).toContain('pragma circom');\n          |                      ^\n      399 |       expect(source).toContain('component main');\n      400 |       \n      401 |       // Each circuit should have documented optimization goals\n\n      at toContain (lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js:398:22)\n","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/circuits/circuitDifferentialTesting.test.js","startTime":1744794531827,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["BIP44 Wallet Functions","getBIP44Path"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions getBIP44Path should generate correct Ethereum path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate correct Ethereum path"},{"ancestorTitles":["BIP44 Wallet Functions","getBIP44Path"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions getBIP44Path should generate correct Polygon path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate correct Polygon path"},{"ancestorTitles":["BIP44 Wallet Functions","getBIP44Path"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions getBIP44Path should generate correct Solana path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate correct Solana path"},{"ancestorTitles":["BIP44 Wallet Functions","getBIP44Path"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions getBIP44Path should use Ethereum as default for unknown chains","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use Ethereum as default for unknown chains"},{"ancestorTitles":["BIP44 Wallet Functions","getBIP44Path"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions getBIP44Path should handle different account numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle different account numbers"},{"ancestorTitles":["BIP44 Wallet Functions","deriveWalletFromMnemonic"],"duration":2734,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions deriveWalletFromMnemonic should derive deterministic wallets from mnemonic","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should derive deterministic wallets from mnemonic"},{"ancestorTitles":["BIP44 Wallet Functions","deriveWalletFromMnemonic"],"duration":1501,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions deriveWalletFromMnemonic should always derive the same wallet from the same path","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should always derive the same wallet from the same path"},{"ancestorTitles":["BIP44 Wallet Functions","generateTemporaryWallet"],"duration":905,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions generateTemporaryWallet should generate a wallet with correct structure","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should generate a wallet with correct structure"},{"ancestorTitles":["BIP44 Wallet Functions","generateTemporaryWallet"],"duration":2897,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions generateTemporaryWallet should generate new wallet with each call unless mnemonic provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate new wallet with each call unless mnemonic provided"},{"ancestorTitles":["BIP44 Wallet Functions","generateTemporaryWallet"],"duration":1132,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions generateTemporaryWallet should use provided options","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use provided options"},{"ancestorTitles":["BIP44 Wallet Functions","generateTemporaryWallet"],"duration":820,"failureDetails":[],"failureMessages":[],"fullName":"BIP44 Wallet Functions generateTemporaryWallet should use default options if none provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use default options if none provided"}],"endTime":1744794542578,"message":"","name":"/Users/karpel/Documents/GitHub/proof-of-funds/lib/zk/__tests__/bip44Wallet.test.js","startTime":1744794531812,"status":"passed","summary":""}],"wasInterrupted":false}
