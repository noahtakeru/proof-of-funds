"use strict";(()=>{var e={};e.id=338,e.ids=[338],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6119:e=>{e.exports=require("perf_hooks")},4637:e=>{e.exports=import("snarkjs")},6835:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},8017:(e,r,t)=>{t.r(r),t.d(r,{config:()=>h,default:()=>f,routeModule:()=>p});var o={};t.r(o),t.d(o,{default:()=>m});var i=t(9150),a=t(1631),n=t(6835),s=t(4673),u=t(5966),l=t(6119);let d=require("os");var c=t.n(d);async function m(e,r){if(r.setHeader("Access-Control-Allow-Origin","*"),r.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),r.setHeader("Access-Control-Allow-Headers","Content-Type, X-API-Key, X-User-Id, X-Operation-Id"),"OPTIONS"===e.method)return r.status(200).end();if("GET"!==e.method&&"POST"!==e.method)return r.status(405).json({error:"Method not allowed",allowedMethods:["GET","POST","OPTIONS"]});try{let e=l.performance.now(),t=!1;if(s.s.isInitialized())t=!0;else{let e=await s.s.initialize({serverSide:!0,maxRetries:2});t=e,e||u.X.recordError("status-api","Failed to initialize snarkjs")}let o=u.X.getOperationsStats(),i={"groth16.fullProve":{standard:o.averageExecutionTimeMs||800,threshold:o.averageExecutionTimeMs?Math.round(1.2*o.averageExecutionTimeMs):950,maximum:o.averageExecutionTimeMs?Math.round(1.3*o.averageExecutionTimeMs):950},"groth16.prove":{standard:o.averageExecutionTimeMs?Math.round(.7*o.averageExecutionTimeMs):500,threshold:o.averageExecutionTimeMs?Math.round(.85*o.averageExecutionTimeMs):600,maximum:o.averageExecutionTimeMs?Math.round(.9*o.averageExecutionTimeMs):600},"groth16.verify":{standard:o.averageExecutionTimeMs?Math.round(.2*o.averageExecutionTimeMs):100,threshold:o.averageExecutionTimeMs?Math.round(.25*o.averageExecutionTimeMs):100,maximum:o.averageExecutionTimeMs?Math.round(.3*o.averageExecutionTimeMs):100},"plonk.fullProve":{standard:o.averageExecutionTimeMs?Math.round(1.5*o.averageExecutionTimeMs):1200,threshold:o.averageExecutionTimeMs?Math.round(1.8*o.averageExecutionTimeMs):1400,maximum:o.averageExecutionTimeMs?Math.round(2*o.averageExecutionTimeMs):1400}},a=c().loadavg()[0]/c().cpus().length,n=a>.7,d={cpu:{cores:c().cpus().length,model:c().cpus()[0].model,load:a.toFixed(2)},memory:{total:Math.round(c().totalmem()/1073741824)+" GB",free:Math.round(c().freemem()/1073741824)+" GB",percentFree:Math.round(c().freemem()/c().totalmem()*100)+"%"},platform:c().platform(),arch:c().arch(),uptime:Math.round(c().uptime()/3600)+" hours"},m={healthy:t&&!n,snarkjsInitialized:t,highLoad:n,maintenance:!1,version:process.env.SERVICE_VERSION||"1.0.0"},f={available:m.healthy,version:s.s.getVersion()||"0.7.5",features:["groth16.fullProve","groth16.verify"],processingTimes:i,serverTiming:{totalTime:l.performance.now()-e},telemetryStats:{averageExecutionTimeMs:o.averageExecutionTimeMs||5e3,totalOperations:o.totalOperations||0,successRate:o.successRate||100,serverSideOperations:o.serverSideOperations||0},capabilities:d,serviceStatus:m,rateLimits:{standard:{requestsPerMinute:10,requestsPerHour:100,burstLimit:20},authenticated:{requestsPerMinute:30,requestsPerHour:500,burstLimit:50}},timestamp:new Date().toISOString()},h=l.performance.now();return u.X.recordOperation({operation:"status-check",executionTimeMs:h-e,success:!0,serverSide:!0}),r.status(200).json(f)}catch(e){return u.X.recordError("status-api",e.message||"Unknown error during status check"),r.status(500).json({error:"Failed to retrieve status",message:e.message||"Unknown error during status check"})}}let f=(0,n.l)(o,"default"),h=(0,n.l)(o,"config"),p=new i.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/zk/status",pathname:"/api/zk/status",bundlePath:"",filename:""},userland:o})},1631:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},9150:(e,r,t)=>{e.exports=t(145)},4673:(e,r,t)=>{t.d(r,{s:()=>u});let o=!1,i=null;async function a(e={}){let r=e.serverSide||!1,a=e.maxRetries||3;if(o&&i)return!0;let n=0;for(;n<a;)try{if(r)try{i=require("snarkjs")}catch(e){throw Error(`Failed to load snarkjs with require: ${e.message}`)}else try{i=await Promise.resolve().then(t.bind(t,4637))}catch(e){throw Error(`Failed to load snarkjs with dynamic import: ${e.message}`)}if(!i||!i.groth16||"function"!=typeof i.groth16.fullProve)throw Error("Loaded snarkjs does not contain expected methods (groth16.fullProve)");if(!i.groth16.verify||"function"!=typeof i.groth16.verify)throw Error("Loaded snarkjs does not contain expected methods (groth16.verify)");return o=!0,console.log("snarkjs loaded successfully"),!0}catch(e){console.error(`Error initializing snarkjs (attempt ${n+1}/${a}):`,e),n++,await new Promise(e=>setTimeout(e,1e3))}let s=Error(`Failed to initialize snarkjs after ${a} attempts`);throw console.error(s),s}function n(){if(!o||!i)throw Error("snarkjs not initialized. Call initialize() first.");return i}async function s(){return o||await a({serverSide:!0}),n()}let u={initialize:a,isInitialized:function(){return o&&null!==i},getSnarkjs:n,fullProve:async function(e,r,t,a={}){if(!o||!i)throw Error("snarkjs not initialized. Call initialize() first.");if(!e)throw Error("Missing required parameter: input");if(!r)throw Error("Missing required parameter: wasmPath");if(!t)throw Error("Missing required parameter: zkeyPath");try{if("undefined"!=typeof require){let e=require("fs");if(!e.existsSync(r))throw Error(`WASM file not found: ${r}`);if(!e.existsSync(t))throw Error(`zkey file not found: ${t}`)}let o=await i.groth16.fullProve(e,r,t,a);if(!o||!o.proof||!o.publicSignals)throw Error("Proof generation did not return expected results");return o}catch(i){let o=Error(`Failed to generate proof: ${i.message}`);throw o.originalError=i,o.input=e,o.wasmPath=r,o.zkeyPath=t,o}},verify:async function(e,r,t){if(!o||!i)throw Error("snarkjs not initialized. Call initialize() first.");if(!e)throw Error("Missing required parameter: verificationKey");if(!r)throw Error("Missing required parameter: publicSignals");if(!t)throw Error("Missing required parameter: proof");try{return await i.groth16.verify(e,r,t)}catch(r){let e=Error(`Failed to verify proof: ${r.message}`);throw e.originalError=r,e}},load:s}},5966:(e,r,t)=>{t.d(r,{X:()=>s});let o={enabled:!1,endpoint:null,bufferSize:10,flushInterval:3e4,retryAttempts:3},i=[],a=null;async function n(){if(0===i.length)return;if(!o.enabled||!o.endpoint){i.length=0;return}let e=[...i];i.length=0;let r=0,t=!1;for(;r<o.retryAttempts&&!t;)try{let r=await fetch(o.endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({events:e,timestamp:new Date().toISOString(),version:"0.1.0"})});if(!r.ok)throw Error(`Server returned status: ${r.status}`);t=!0}catch(e){console.error(`Failed to send telemetry data (attempt ${r+1}/${o.retryAttempts}):`,e),++r<o.retryAttempts?await new Promise(e=>setTimeout(e,1e3*Math.pow(2,r))):console.error("Failed to send telemetry data after maximum retry attempts")}}let s={initialize:function(e={}){if((o={...o,...e}).enabled&&o.endpoint)return a&&clearInterval(a),a=setInterval(n,o.flushInterval),!0;throw Error("Telemetry initialization failed: telemetry is disabled or endpoint is not configured")},recordOperation:function(e){if(!e||"object"!=typeof e)throw Error("Invalid operation data: must be an object");if(!e.operation)throw Error("Invalid operation data: operation name is required");if(void 0===e.executionTimeMs||isNaN(e.executionTimeMs))throw Error("Invalid operation data: executionTimeMs must be a number");if(!o.enabled){console.warn("Telemetry is disabled, operation not recorded:",e.operation);return}if(!o.endpoint)throw Error("Telemetry endpoint not configured");try{i.push({type:"operation",timestamp:new Date().toISOString(),operation:e.operation,executionTimeMs:e.executionTimeMs,serverSide:!!e.serverSide,success:!!e.success,additionalInfo:e.additionalInfo||{}}),i.length>=o.bufferSize&&n()}catch(t){let r=Error(`Failed to record operation: ${t.message}`);throw r.originalError=t,r.operationData=e,r}},recordError:function(e,r,t={}){if(!e)throw Error("Invalid error data: context is required");if(!r)throw Error("Invalid error data: errorMessage is required");if(t&&"object"!=typeof t)throw Error("Invalid error data: additionalInfo must be an object");if(!o.enabled){console.error(`[Telemetry disabled] Error in ${e}: ${r}`,t);return}if(!o.endpoint)throw Error("Telemetry endpoint not configured");try{i.push({type:"error",timestamp:new Date().toISOString(),context:e,errorMessage:r,additionalInfo:t||{}}),n()}catch(o){console.error("Failed to record error in telemetry system:",o),console.error("Original error:",e,r,t)}},_getConfig:()=>({...o}),_getBufferLength:()=>i.length,_flushBuffer:n}}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=8017);module.exports=t})();